{"version":3,"file":"static/js/470.c205d9c6.chunk.js","mappings":"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","sources":["components/InteractiveAlert.tsx","components/MotifBySize.tsx","components/StitchPattern.tsx","projects/tiara-vest/stitches.tsx"],"sourcesContent":["import { Alert, AlertIcon } from \"@chakra-ui/react\";\n\ninterface Props {\n  isRow?: boolean;\n}\n\nexport default function InteractiveAlert({ isRow = false }: Props) {\n  return (\n    <Alert width=\"fit-content\">\n      <AlertIcon />\n      Chart is interactive - click a {isRow ? \"row\" : \"stitch group\"} to see the\n      corresponding written instruction.\n    </Alert>\n  );\n}\n","import { Select, VStack, Text, Flex } from \"@chakra-ui/react\";\nimport {\n  Direction,\n  MotifComponent,\n  MotifInPattern,\n  StitchList,\n  getUniqueStsFromChart,\n} from \"@tanyoknits/shared\";\nimport { useState } from \"react\";\nimport InteractiveAlert from \"./InteractiveAlert\";\n\ninterface Props {\n  motifBySize: { size: string; motif: MotifInPattern; direction?: Direction }[];\n}\n\nexport default function MotifBySize({ motifBySize }: Props) {\n  const [selectedSize, setSelectedSize] = useState<number>(0);\n  const { motif, direction } = motifBySize[selectedSize] ?? motifBySize[0];\n  const stitches = getUniqueStsFromChart(motif.chart);\n  return (\n    <VStack spacing={6} align=\"left\">\n      <Flex\n        gap={4}\n        align={[\"left\", \"center\"]}\n        flexDirection={[\"column\", \"row\"]}\n      >\n        {motifBySize.length > 1 && (\n          <>\n            <Text variant=\"bold\">Select size</Text>\n            <Select\n              onChange={(e) => setSelectedSize(+e.target.value)}\n              width=\"fit-content\"\n              defaultValue={selectedSize}\n              mr={[0, 8]}\n            >\n              {motifBySize.map((motif, i) => (\n                <option key={i} value={i}>\n                  {motif.size}\n                </option>\n              ))}\n            </Select>\n          </>\n        )}\n        <InteractiveAlert />\n      </Flex>\n      <MotifComponent {...motif} direction={direction} />\n      <StitchList stitches={stitches} />\n    </VStack>\n  );\n}\n","import { Flex, Text } from \"@chakra-ui/react\";\nimport MotifBySize from \"./MotifBySize\";\nimport { MotifBySizeItem } from \"../utils/types\";\n\ninterface Props {\n  intro: string;\n  motifBySize: MotifBySizeItem[];\n}\nexport default function StitchPattern({ intro, motifBySize }: Props) {\n  return (\n    <Flex direction=\"column\" gap={6}>\n      <Text>{intro}</Text>\n      <MotifBySize\n        motifBySize={motifBySize.map((m) => {\n          const { motif, sizes } = m;\n          return { size: sizes.join(\", \"), motif };\n        })}\n      />\n    </Flex>\n  );\n}\n","import {\n  Abbr,\n  Techniques,\n  definition,\n  getMossMotif,\n  techniques,\n} from \"@tanyoknits/shared\";\nimport {\n  getBasicBraidMotif,\n  getZigZagMotif,\n  getCenterDiamondMotif,\n} from \"@tanyoknits/shared\";\nimport { MotifBySizeItem, PageInfo } from \"../../utils/types\";\nimport { sizes } from \"./sizes\";\nimport StitchPattern from \"../../components/StitchPattern\";\n\n// Stitches in charts\nconst { m1l } = definition;\n\n// Charts\nexport const braid: MotifBySizeItem[] = [\n  {\n    sizes: [\"2XS\", \"XS\", \"S\", \"M\", \"L\", \"XL\"],\n    motif: getBasicBraidMotif(9, 8),\n  },\n  {\n    sizes: [\"2XL\", \"3XL\", \"4XL\"],\n    motif: getBasicBraidMotif(12, 12),\n  },\n];\n\nexport const zigzag: MotifBySizeItem[] = [\n  {\n    sizes: [\"2XS\"],\n    motif: getZigZagMotif(2, 2, 4),\n  },\n  {\n    sizes: [\"XS\"],\n    motif: getZigZagMotif(3, 2, 4),\n  },\n  {\n    sizes: [\"S\"],\n    motif: getZigZagMotif(3, 1, 6),\n  },\n  {\n    sizes: [\"M\", \"L\", \"XL\"],\n    motif: getZigZagMotif(3, 2, 6),\n  },\n  {\n    sizes: [\"2XL\", \"3XL\", \"4XL\"],\n    motif: getZigZagMotif(3, 3, 6),\n  },\n];\n\nconst centerMotifs: MotifBySizeItem[][] = [true, false].map((hasMB) => [\n  {\n    sizes: [\"2XS\"],\n    motif: getCenterDiamondMotif(hasMB, -1),\n  },\n  {\n    sizes: [\"XS\", \"S\", \"M\"],\n    motif: getCenterDiamondMotif(),\n  },\n  {\n    sizes: [\"L\"],\n    motif: getCenterDiamondMotif(hasMB, 1),\n  },\n  {\n    sizes: [\"XL\"],\n    motif: getCenterDiamondMotif(hasMB, 2),\n  },\n  {\n    sizes: [\"2XL\", \"3XL\", \"4XL\"],\n    motif: getCenterDiamondMotif(hasMB, 3),\n  },\n]);\n\nexport const diamond = centerMotifs[0];\nexport const diamondNoBobble = centerMotifs[1];\n\nexport const moss: MotifBySizeItem[] = [\n  { sizes: sizes, motif: { ...getMossMotif(2), title: undefined } },\n];\n\nconst usedTechniques: {\n  title: string;\n  desc: string;\n  video: string | undefined;\n}[] = [\n  {\n    title: \"Cable CO\",\n    desc: \"Used for CO of each shoulder\",\n    video: \"https://www.youtube.com/watch?v=4YUfdREnSQI\",\n  },\n  {\n    title: \"Knit On CO (koco)\",\n    desc: \"Used to create new sts along neckline or underarm\",\n    video: undefined,\n  },\n  {\n    title: \"m1l & m1r\",\n    desc: \"Make 1 left/right, used for arm inset increase\",\n    video: m1l.videos?.[0].url,\n  },\n  {\n    title: \"w & t\",\n    desc: \"Wrap & turn; short row technique, my preference is German short row. \",\n    video: techniques[\"Wrap & Turn\"]?.videos?.[0].url,\n  },\n  {\n    title: \"Sewn on BO\",\n    desc: \"Or tubular BO\",\n    video: techniques[\"Tubular BO\"]?.videos[0].url,\n  },\n];\n\nconst REFLECT_TEXT =\n  \"Reflected version of this motif is also used to make a symmetrical pattern on front and back\";\n\nconst stitchPage: PageInfo[] = [\n  {\n    id: \"braid-chart\",\n    label: \"Braid\",\n    component: <StitchPattern intro={REFLECT_TEXT} motifBySize={braid} />,\n  },\n  {\n    id: \"zigzag-chart\",\n    label: \"Zigzag\",\n    component: <StitchPattern intro={REFLECT_TEXT} motifBySize={zigzag} />,\n  },\n  {\n    id: \"diamond-chart\",\n    label: \"Diamond\",\n    component: (\n      <StitchPattern\n        intro=\"Same motif but without bobbles are used in the back.\"\n        motifBySize={diamond}\n      />\n    ),\n  },\n  {\n    id: \"moss-chart\",\n    label: \"Moss\",\n    component: (\n      <StitchPattern\n        intro=\"This motif is used on the side as front and back connects to the whole body.\"\n        motifBySize={moss}\n      />\n    ),\n  },\n  {\n    id: \"techniques\",\n    label: \"Techniques\",\n    component: <Techniques list={usedTechniques} />,\n  },\n  {\n    id: \"abbr\",\n    label: \"Abbreviations\",\n    component: (\n      <Abbr\n        list={[\"CO\", \"BO\", \"cont\", \"inc\", \"dec\", \"rep\", \"RS\", \"SR\", \"WS\", \"pu\"]}\n      />\n    ),\n  },\n];\n\nexport default stitchPage;\n"],"names":["InteractiveAlert","_ref","_ref$isRow","isRow","_jsxs","Alert","width","children","_jsx","AlertIcon","MotifBySize","_motifBySize$selected","motifBySize","_useState","useState","_useState2","_slicedToArray","selectedSize","setSelectedSize","_ref2","motif","direction","stitches","getUniqueStsFromChart","chart","VStack","spacing","align","Flex","gap","flexDirection","length","_Fragment","Text","variant","Select","onChange","e","target","value","defaultValue","mr","map","i","size","MotifComponent","_objectSpread","StitchList","StitchPattern","intro","m","sizes","join","m1l","definition","braid","getBasicBraidMotif","zigzag","getZigZagMotif","centerMotifs","hasMB","getCenterDiamondMotif","diamond","diamondNoBobble","moss","getMossMotif","title","undefined","usedTechniques","desc","video","_m1l$videos","videos","url","_techniques$WrapTu","techniques","_techniques$WrapTu$vi","_techniques$TubularB","REFLECT_TEXT","stitchPage","id","label","component","Techniques","list","Abbr"],"sourceRoot":""}
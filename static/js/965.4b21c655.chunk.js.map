{"version":3,"file":"static/js/965.4b21c655.chunk.js","mappings":"uOAiBe,SAASA,EAAe,GAAgC,IAA9BC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SACjD,OACE,iCACE,SAAC,KAAmB,CAACD,SAAUA,EAASE,SACxC,SAAC,KAAG,CAACC,EAAE,MAAK,SAAEF,KACd,SAAC,KAAI,CAACG,SAAS,MAAK,SACjBJ,EAASK,MAAMC,KAAI,SAACC,EAAMC,GAAC,OAC1B,UAAC,KAAQ,CAASC,GAAI,EAAE,WACtB,SAAC,KAAO,CAACC,GAAG,KAAKC,KAAK,KAAKF,GAAI,EAAE,SAC9BF,EAAKK,SAER,SAAC,KAAI,UACFL,EAAKM,KAAKP,KAAI,SAACQ,EAAMC,GAAC,OACrB,UAAC,KAAQ,WACND,EAAKE,MAAK,KAAIF,EAAKG,cADPF,EAEJ,QARFP,EAWJ,QAKrB,C,iCCCaU,EAAO,SAClBC,EACAC,GAEA,IAAMC,EAAM,CAAC,EAOb,OANAC,OAAOF,KAAKD,GACTI,OAVH,SAA6BH,GAAA,OAC7B,SAAyBI,GAAA,OACO,IAA9BJ,EAAKK,QAAQD,EAAgB,EAQrBE,CAAUN,IACjBO,SAAQ,SAACH,GACRH,EAAIG,GAAOL,EAAIK,EACjB,IAEKH,CACT,EAwNA,ICrOA,ED6FA,SAAgBO,GACd,OAAO,SAACC,GAUN,IAAMC,EAAS,SAACC,EAAYC,GAC1B,IA9GaC,EA8Gb,EAAkDF,EAA1CrB,GAAIwB,OAAAA,IAAY,EAAAN,EAAAA,EAAYO,EAAcJ,EAArBK,MASvBC,EAnGZ,SACEC,EACAP,EACAQ,GAEA,IAAMF,EAAgBnB,EAAKa,EAAOQ,GAElC,IAAKD,EAAM,CAKT,IAAME,EACiB,oBAAdC,EAAAA,EAA2B,CAAEC,QAASD,EAAAA,GAAcA,EAAAA,EAE7DnB,OAAOF,KAAKiB,GAAeV,SAAQ,SAACH,GAC7BgB,EAAiBE,QAAQlB,WAErBa,EAAcb,EAEzB,GACF,CAEA,OAAOa,CACT,CA2EoCM,MAPN,IAAtBd,EAAQe,YAEmB,kBAAdV,IACqB,IAA5BA,EAAUT,QAAQ,OAnHbQ,EAoHMC,EAAU,GApHQD,EAAGY,gBAAkBZ,IAsHpDJ,EAAQe,UAC6Cb,EAAO,CAChE,KACA,UAGFM,EAAcL,IAAMA,EACpBK,EAAcF,UAAYN,EAAQiB,QAC9BC,EAAAA,EAAAA,IAAGlB,EAAQO,MAAOC,EAAcF,WAAaA,IAC7CY,EAAAA,EAAAA,IAAGV,EAAcF,WAAaA,EAAWN,EAAQO,OAErD,IAAQY,EAASnB,EAATmB,KAER,GAAIA,EAAM,CACR,IAAMC,EAAgC,CAAC,EAGvC,IAAK,IAAMC,KAAQF,EAAM,CACvB,IAAMG,EAAWH,EAAKE,GAChBE,EAASD,EAAS,GAClBE,EAAOF,EAAS,IAAM,GACtBG,EAA0B,oBAAXF,EAAwBA,EAAOrB,GAASqB,EAExCvB,EAAQqB,KAE7BD,EAAM,KAANA,OAAWC,IAAAA,GAAAA,OAAaI,GAAAA,OAAQD,EAClC,CAEA,IAAME,EAAWlB,EAAcY,OAAS,CAAC,EACnC7B,EAAOE,OAAOF,KAAKmC,GACrBnC,EAAKoC,OAAS,GAChBpC,EAAKO,SAAQ,SAACH,GACZyB,EAAMzB,GAAO+B,EAAS/B,EACxB,IAGFa,EAAcY,MAAQA,CACxB,CAEA,OAAKrB,EAAY6B,WAAa7B,IAAQM,GAGpCG,EAAc3B,GAAKwB,EAEZwB,EAAAA,cAAoB9B,EAAKS,IAE3BqB,EAAAA,cAAoBxB,EAAWG,EACxC,EAEMsB,EAASD,EAAAA,WACXA,EAAAA,WAAiB5B,GAGjB,SAACC,GACC,IAAM6B,EAAO1C,EAAKa,EAAO,CAAC,aAC1B,OAAOD,EAAO8B,EAAM7B,EAAM8B,SAC5B,EAUJ,OARCF,EAAeG,YAAcjC,EAAQqB,KAGrCS,EAAeF,UAAY,CAC1BtB,UAAWN,EAAQO,MACnB2B,QAASnC,GAGJ+B,CACT,CACF,CC3NmBK,CAAM,MAANA,CAAM,mDAsCC,QC/BnB,IAAMhE,EAA0B,CACrCE,MAAO,CACL,6IACA,4GAEFG,MAAO,CACL,CACE4D,GAAI,OACJrD,MAAO,WACPC,KAAM,CACJ,CAAEG,MAAO,EAAGkD,UAAW,OAAQjD,YAAa,0BAC5C,CACED,MAAO,EACPkD,UAAW,OACXjD,YAAa,6BAEf,CACED,MAAO,EACPkD,UAAW,OACXjD,YAAa,yCAInB,CACEgD,GAAI,QACJrD,MAAO,YACPC,KAAM,CACJ,CACEG,MAAO,EACPkD,UAAW,OACXjD,YACE,+DAEJ,CACED,MAAO,EACPkD,UAAW,OACXjD,YACE,+DAEJ,CACED,MAAO,EACPkD,UAAW,OACXjD,YAAa,0CAInB,CACEgD,GAAI,OACJrD,MAAO,qBACPC,KAAM,CACJ,CACEG,MAAO,EACPkD,UAAW,QACXjD,YAAa,6BAInB,CACEgD,GAAI,QACJrD,MAAO,QACPC,KAAM,CACJ,CACEG,MAAO,EACPkD,UAAW,QACXjD,YAAa,sBAEf,CACED,MAAO,EACPkD,UAAW,QACXjD,YAAa,sBAEf,CACED,MAAO,GACPkD,UAAW,QACXjD,YAAa,gBAOR,SAASkD,EAAY,GAAkB,IAAhBC,EAAI,EAAJA,KACpC,OACE,UAAC,EAAO,CACNC,MAAM,OACNC,OAAO,OACPC,QAAO,cACPC,KAAK,OACLC,MAAM,6BAA4B,WAGlC,iBAAMC,EAAE,qXAER,iBAAMA,EAAE,kGACR,iBAAMA,EAAE,4BACR,iBAAMA,EAAE,8BACR,iBAAMA,EAAE,8BACR,iBAAMA,EAAE,8BAER,iBAAMC,GAAG,KAAKC,GAAG,QAAQC,GAAG,MAAMC,GAAG,QAAQ3C,UAAU,YACvD,iBAAMwC,GAAG,MAAMC,GAAG,QAAQC,GAAG,MAAMC,GAAG,QAAQ3C,UAAU,YACxD,iBAAMwC,GAAG,KAAKC,GAAG,QAAQC,GAAG,MAAMC,GAAG,QAAQ3C,UAAU,YAEvD,eAAGA,UAAU,SAAQ,WACnB,iBAAMwC,GAAG,OAAOC,GAAG,KAAKC,GAAG,OAAOC,GAAG,MAAMC,OAAO,aAClD,iBAAMJ,GAAG,OAAOC,GAAG,MAAMC,GAAG,OAAOC,GAAG,MAAMC,OAAO,aACnD,iBAAMJ,GAAG,QAAQC,GAAG,MAAMC,GAAG,QAAQC,GAAG,MAAMC,OAAO,aACrD,iBAAMJ,GAAG,MAAMC,GAAG,QAAQC,GAAG,MAAMC,GAAG,QAAQC,OAAO,aACrD,iBAAMJ,GAAG,KAAKC,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,OAAO,gBAGlD,iBAAMC,EAAE,MAAMC,EAAE,KAAI,mBAGpB,iBAAMD,EAAE,MAAMC,EAAE,KAAI,oBAGpB,iBAAMD,EAAE,KAAKC,EAAE,MAAK,oBAGpB,iBAAMD,EAAE,MAAMC,EAAE,MAAK,mBAGrB,eACE9C,WAAWY,EAAAA,EAAAA,IAAY,MAATqB,GAAgB,UAC9Bc,UAAU,qBAAoB,WAE9B,iBAAMR,EAAE,mNACR,iBAAMA,EAAE,mCACR,iBAAMC,GAAG,KAAKC,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAM3C,UAAU,YACnD,mBAAQY,GAAG,KAAKoC,GAAG,MAAMC,EAAE,OAC3B,iBAAMJ,EAAE,KAAKC,EAAE,MAAMZ,MAAM,IAAIC,OAAO,UAExC,eAAGnC,WAAWY,EAAAA,EAAAA,IAAY,UAATqB,GAAoB,UAAU,WAC7C,iBAAMM,EAAE,4OACR,iBAAMA,EAAE,qGACR,iBAAMC,GAAG,MAAMC,GAAG,QAAQC,GAAG,MAAMC,GAAG,QAAQ3C,UAAU,YACxD,mBAAQY,GAAG,MAAMoC,GAAG,MAAMC,EAAE,OAC5B,iBAAMJ,EAAE,MAAMC,EAAE,MAAMZ,MAAM,IAAIC,OAAO,UAGzC,mBAAQvB,GAAG,MAAMoC,GAAG,MAAMC,EAAE,OAC5B,mBAAQrC,GAAG,KAAKoC,GAAG,MAAMC,EAAE,OAC3B,mBAAQrC,GAAG,MAAMoC,GAAG,MAAMC,EAAE,OAC5B,mBAAQrC,GAAG,MAAMoC,GAAG,MAAMC,EAAE,OAC5B,mBAAQrC,GAAG,MAAMoC,GAAG,MAAMC,EAAE,OAC5B,mBAAQrC,GAAG,MAAMoC,GAAG,KAAKC,EAAE,OAC3B,mBAAQrC,GAAG,MAAMoC,GAAG,KAAKC,EAAE,OAC3B,iBAAMJ,EAAE,MAAMC,EAAE,MAAMZ,MAAM,IAAIC,OAAO,OACvC,iBAAMU,EAAE,KAAKC,EAAE,MAAMZ,MAAM,IAAIC,OAAO,OACtC,iBAAMU,EAAE,MAAMC,EAAE,MAAMZ,MAAM,IAAIC,OAAO,OACvC,iBAAMU,EAAE,MAAMC,EAAE,MAAMZ,MAAM,IAAIC,OAAO,OACvC,iBAAMU,EAAE,MAAMC,EAAE,MAAMZ,MAAM,IAAIC,OAAO,QAG7C,CCrJe,SAASe,EAAY,GAAwB,IAAtBC,EAAI,EAAJA,KAAU,EAAJ3E,KAC1C,OAAa,IAAT2E,GAEA,SAACvF,EAAc,CAACC,SAAUA,EAAS,UACjC,SAAC,EAAW,CAACoE,KAAK,YAGJ,IAATkB,GACF,kCACW,IAATA,GACF,mCACW,IAATA,GACF,mCAEA,kCAEX,C,8BC9BA,WAAiB,C","sources":["garment_schema/SchemaOverview.tsx","../../../node_modules/@linaria/react/src/styled.ts","garment_schema/styles.ts","garment_schema/TopDownVest.tsx","projects/tiara-vest/Instruction.tsx","webpack://@tanyoknits/interactive-patterns/./src/garment_schema/styles.ts?7e2c"],"sourcesContent":["import { Box, Heading, List, ListItem } from \"@chakra-ui/react\";\nimport { Direction, PatternTextOverview } from \"@tanyoknits/shared\";\n\nexport type GarmentSchema = {\n  notes: string[];\n  parts: {\n    id: string;\n    label: string;\n    list: { order: number; direction: Direction; instruction: string }[];\n  }[];\n};\n\ninterface Props {\n  overview: GarmentSchema;\n  children: React.ReactNode;\n}\n\nexport default function SchemaOverview({ overview, children }: Props) {\n  return (\n    <>\n      <PatternTextOverview overview={overview.notes} />\n      <Box w=\"3xl\">{children}</Box>\n      <List maxWidth=\"4xl\">\n        {overview.parts.map((part, i) => (\n          <ListItem key={i} mb={6}>\n            <Heading as=\"h3\" size=\"md\" mb={2}>\n              {part.label}\n            </Heading>\n            <List>\n              {part.list.map((item, j) => (\n                <ListItem key={j}>\n                  {item.order}. {item.instruction}\n                </ListItem>\n              ))}\n            </List>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * This file contains an runtime version of `styled` component. Responsibilities of the component are:\n * - returns ReactElement based on HTML tag used with `styled` or custom React Component\n * - injects classNames for the returned component\n * - injects CSS variables used to define dynamic styles based on props\n */\nimport validAttr from '@emotion/is-prop-valid';\nimport React from 'react';\n\nimport { cx } from '@linaria/core';\nimport type { CSSProperties } from '@linaria/core';\nimport type { StyledMeta } from '@linaria/tags';\n\nexport type NoInfer<A> = [A][A extends any ? 0 : never];\n\ntype Component<TProps> =\n  | ((props: TProps) => unknown)\n  | { new (props: TProps): unknown };\n\ntype Has<T, TObj> = [T] extends [TObj] ? T : T & TObj;\n\ntype Options = {\n  atomic?: boolean;\n  class: string;\n  name: string;\n  propsAsIs: boolean;\n  vars?: {\n    [key: string]: [\n      string | number | ((props: unknown) => string | number),\n      string | void\n    ];\n  };\n};\n\nconst isCapital = (ch: string): boolean => ch.toUpperCase() === ch;\nconst filterKey =\n  <TExclude extends keyof any>(keys: TExclude[]) =>\n  <TAll extends keyof any>(key: TAll): key is Exclude<TAll, TExclude> =>\n    keys.indexOf(key as any) === -1;\n\nexport const omit = <T extends Record<string, unknown>, TKeys extends keyof T>(\n  obj: T,\n  keys: TKeys[]\n): Omit<T, TKeys> => {\n  const res = {} as Omit<T, TKeys>;\n  Object.keys(obj)\n    .filter(filterKey(keys))\n    .forEach((key) => {\n      res[key] = obj[key];\n    });\n\n  return res;\n};\n\nfunction filterProps<T extends Record<string, unknown>, TKeys extends keyof T>(\n  asIs: boolean,\n  props: T,\n  omitKeys: TKeys[]\n): Partial<Omit<T, TKeys>> {\n  const filteredProps = omit(props, omitKeys) as Partial<T>;\n\n  if (!asIs) {\n    /**\n     * A failsafe check for esModule import issues\n     * if validAttr !== 'function' then it is an object of { default: Fn }\n     */\n    const interopValidAttr =\n      typeof validAttr === 'function' ? { default: validAttr } : validAttr;\n\n    Object.keys(filteredProps).forEach((key) => {\n      if (!interopValidAttr.default(key)) {\n        // Don't pass through invalid attributes to HTML elements\n        delete filteredProps[key];\n      }\n    });\n  }\n\n  return filteredProps;\n}\n\nconst warnIfInvalid = (value: unknown, componentName: string) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (\n      typeof value === 'string' ||\n      // eslint-disable-next-line no-self-compare,no-restricted-globals\n      (typeof value === 'number' && isFinite(value))\n    ) {\n      return;\n    }\n\n    const stringified =\n      typeof value === 'object' ? JSON.stringify(value) : String(value);\n\n    // eslint-disable-next-line no-console\n    console.warn(\n      `An interpolation evaluated to '${stringified}' in the component '${componentName}', which is probably a mistake. You should explicitly cast or transform the value to a string.`\n    );\n  }\n};\n\ninterface IProps {\n  className?: string;\n  style?: Record<string, string>;\n  [props: string]: unknown;\n}\n\n// Components with props are not allowed\nfunction styled(\n  componentWithStyle: () => any\n): (error: 'The target component should have a className prop') => void;\n// Property-based interpolation is allowed only if `style` property exists\nfunction styled<\n  TProps extends Has<TMustHave, { style?: React.CSSProperties }>,\n  TMustHave extends { style?: React.CSSProperties },\n  TConstructor extends Component<TProps>\n>(\n  componentWithStyle: TConstructor & Component<TProps>\n): ComponentStyledTagWithInterpolation<TProps, TConstructor>;\n// If styled wraps custom component, that component should have className property\nfunction styled<\n  TProps extends Has<TMustHave, { className?: string }>,\n  TMustHave extends { className?: string },\n  TConstructor extends Component<TProps>\n>(\n  componentWithoutStyle: TConstructor & Component<TProps>\n): ComponentStyledTagWithoutInterpolation<TConstructor>;\nfunction styled<TName extends keyof JSX.IntrinsicElements>(\n  tag: TName\n): HtmlStyledTag<TName>;\nfunction styled(\n  component: 'The target component should have a className prop'\n): never;\nfunction styled(tag: any): any {\n  return (options: Options) => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (Array.isArray(options)) {\n        // We received a strings array since it's used as a tag\n        throw new Error(\n          'Using the \"styled\" tag in runtime is not supported. Make sure you have set up the Babel plugin correctly. See https://github.com/callstack/linaria#setup'\n        );\n      }\n    }\n\n    const render = (props: any, ref: any) => {\n      const { as: component = tag, class: className } = props;\n      const shouldKeepProps =\n        options.propsAsIs === undefined\n          ? !(\n              typeof component === 'string' &&\n              component.indexOf('-') === -1 &&\n              !isCapital(component[0])\n            )\n          : options.propsAsIs;\n      const filteredProps: IProps = filterProps(shouldKeepProps, props, [\n        'as',\n        'class',\n      ]);\n\n      filteredProps.ref = ref;\n      filteredProps.className = options.atomic\n        ? cx(options.class, filteredProps.className || className)\n        : cx(filteredProps.className || className, options.class);\n\n      const { vars } = options;\n\n      if (vars) {\n        const style: Record<string, string> = {};\n\n        // eslint-disable-next-line guard-for-in,no-restricted-syntax\n        for (const name in vars) {\n          const variable = vars[name];\n          const result = variable[0];\n          const unit = variable[1] || '';\n          const value = typeof result === 'function' ? result(props) : result;\n\n          warnIfInvalid(value, options.name);\n\n          style[`--${name}`] = `${value}${unit}`;\n        }\n\n        const ownStyle = filteredProps.style || {};\n        const keys = Object.keys(ownStyle);\n        if (keys.length > 0) {\n          keys.forEach((key) => {\n            style[key] = ownStyle[key];\n          });\n        }\n\n        filteredProps.style = style;\n      }\n\n      if ((tag as any).__linaria && tag !== component) {\n        // If the underlying tag is a styled component, forward the `as` prop\n        // Otherwise the styles from the underlying component will be ignored\n        filteredProps.as = component;\n\n        return React.createElement(tag, filteredProps);\n      }\n      return React.createElement(component, filteredProps);\n    };\n\n    const Result = React.forwardRef\n      ? React.forwardRef(render)\n      : // React.forwardRef won't available on older React versions and in Preact\n        // Fallback to a innerRef prop in that case\n        (props: any) => {\n          const rest = omit(props, ['innerRef']);\n          return render(rest, props.innerRef);\n        };\n\n    (Result as any).displayName = options.name;\n\n    // These properties will be read by the babel plugin for interpolation\n    (Result as any).__linaria = {\n      className: options.class,\n      extends: tag,\n    };\n\n    return Result;\n  };\n}\n\ntype StyledComponent<T> = StyledMeta &\n  ([T] extends [React.FunctionComponent<any>]\n    ? T\n    : React.FunctionComponent<T & { as?: React.ElementType }>);\n\ntype StaticPlaceholder = string | number | CSSProperties | StyledMeta;\n\ntype HtmlStyledTag<TName extends keyof JSX.IntrinsicElements> = <\n  TAdditionalProps = Record<never, unknown>\n>(\n  strings: TemplateStringsArray,\n  ...exprs: Array<\n    | StaticPlaceholder\n    | ((\n        // Without Omit here TS tries to infer TAdditionalProps\n        // from a component passed for interpolation\n        props: JSX.IntrinsicElements[TName] & Omit<TAdditionalProps, never>\n      ) => string | number)\n  >\n) => StyledComponent<JSX.IntrinsicElements[TName] & TAdditionalProps>;\n\ntype ComponentStyledTagWithoutInterpolation<TOrigCmp> = (\n  strings: TemplateStringsArray,\n  ...exprs: Array<\n    | StaticPlaceholder\n    | ((props: 'The target component should have a style prop') => never)\n  >\n) => StyledMeta & TOrigCmp;\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype ComponentStyledTagWithInterpolation<TTrgProps, TOrigCmp> = <OwnProps = {}>(\n  strings: TemplateStringsArray,\n  ...exprs: Array<\n    | StaticPlaceholder\n    | ((props: NoInfer<OwnProps & TTrgProps>) => string | number)\n  >\n) => keyof OwnProps extends never\n  ? StyledMeta & TOrigCmp\n  : StyledComponent<OwnProps & TTrgProps>;\n\nexport type StyledJSXIntrinsics = {\n  readonly [P in keyof JSX.IntrinsicElements]: HtmlStyledTag<P>;\n};\n\nexport type Styled = typeof styled & StyledJSXIntrinsics;\n\nexport default (process.env.NODE_ENV !== 'production'\n  ? new Proxy(styled, {\n      get(o, prop: keyof JSX.IntrinsicElements) {\n        return o(prop);\n      },\n    })\n  : styled) as Styled;\n","import { styled } from \"@linaria/react\";\n\nconst SvgWrapper = styled.svg`\n  overflow: visible;\n  .hidden {\n    display: none;\n  }\n  path,\n  line {\n    stroke: var(--oc-gray-7);\n    stroke-width: 1;\n  }\n  circle,\n  rect {\n    fill: var(--oc-gray-8);\n  }\n  text {\n    fill: var(--oc-gray-9);\n    font-weight: 700;\n    text-anchor: middle;\n    alignment-baseline: central;\n    font-family: var(--code);\n    font-size: 10px;\n  }\n  .dashed {\n    stroke-width: 1;\n    stroke-dasharray: 4 2;\n  }\n  .round {\n    fill: var(--oc-white);\n  }\n  .text-rotate {\n    transform: scale(1, -1);\n  }\n  .largeText {\n    font-size: var(--font-xlarge);\n    font-weight: normal;\n  }\n`;\n\nexport default SvgWrapper;\n","import React from \"react\";\nimport Wrapper from \"./styles\";\nimport { GarmentSchema } from \"./SchemaOverview\";\nimport { cx } from \"@linaria/core\";\n\ninterface Props {\n  neck: \"round\" | \"v\";\n}\n\nexport const overview: GarmentSchema = {\n  notes: [\n    \"This vest is worked top down as in following parts in order. Top/Down, Front/Back, Right/Left are based on the viewpoint of wearing a vest\",\n    \"Top parts to underarm is worked in flat, then boddy from the underarm and bands are worked in the round.\",\n  ],\n  parts: [\n    {\n      id: \"back\",\n      label: \"Back top\",\n      list: [\n        { order: 1, direction: \"flat\", instruction: \"Right half of back top\" },\n        {\n          order: 2,\n          direction: \"flat\",\n          instruction: \"Left half of the back top\",\n        },\n        {\n          order: 3,\n          direction: \"flat\",\n          instruction: \"Back together, down to the armholes\",\n        },\n      ],\n    },\n    {\n      id: \"front\",\n      label: \"Front top\",\n      list: [\n        {\n          order: 4,\n          direction: \"flat\",\n          instruction:\n            \"Picked up 2), left half of front left, down to the neckline\",\n        },\n        {\n          order: 5,\n          direction: \"flat\",\n          instruction:\n            \"Picked up 1), right half of front top, down to the neckline\",\n        },\n        {\n          order: 6,\n          direction: \"flat\",\n          instruction: \"Front together, down to the armholes\",\n        },\n      ],\n    },\n    {\n      id: \"Body\",\n      label: \"Body from underarm\",\n      list: [\n        {\n          order: 7,\n          direction: \"round\",\n          instruction: \"Front and back together\",\n        },\n      ],\n    },\n    {\n      id: \"bands\",\n      label: \"Bands\",\n      list: [\n        {\n          order: 8,\n          direction: \"round\",\n          instruction: \"Right armhole band\",\n        },\n        {\n          order: 9,\n          direction: \"round\",\n          instruction: \"Left armholes band\",\n        },\n        {\n          order: 10,\n          direction: \"round\",\n          instruction: \"Neckband\",\n        },\n      ],\n    },\n  ],\n};\n\nexport default function TopdownVest({ neck }: Props) {\n  return (\n    <Wrapper\n      width=\"100%\"\n      height=\"100%\"\n      viewBox={`0 0 447 234`}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      {/** back outline */}\n      <path d=\"M67.5 147V146.793L67.3536 146.646L57.5 136.793V11.5H236.5V136.793L226.646 146.646L226.5 146.793V147V221.107L181.232 223.728C179.165 220.738 174.71 218.222 168.874 216.438C162.85 214.595 155.25 213.5 147 213.5C138.579 213.5 130.836 214.641 124.753 216.553C121.712 217.509 119.075 218.661 116.973 219.969C114.993 221.199 113.463 222.583 112.53 224.092L67.5 221.178V147Z\" />\n      {/** arm bands */}\n      <path d=\"M191.991 223.606C191.493 213.294 171.541 205 147 205C122.217 205 102.113 213.459 102 223.912\" />\n      <path d=\"M77 222.294V141L57 121\" />\n      <path d=\"M256 222.294V141L236 121\" />\n      <path d=\"M237 121L217 141V222.158\" />\n      <path d=\"M416 121L396 141V222.158\" />\n      {/** devider */}\n      <line x1=\"77\" y1=\"204.5\" x2=\"217\" y2=\"204.5\" className=\"dashed\" />\n      <line x1=\"236\" y1=\"120.5\" x2=\"414\" y2=\"120.5\" className=\"dashed\" />\n      <line x1=\"57\" y1=\"120.5\" x2=\"235\" y2=\"120.5\" className=\"dashed\" />\n      {/** dimension line */}\n      <g className=\"hidden\">\n        <line x1=\"37.5\" y1=\"11\" x2=\"37.5\" y2=\"225\" stroke=\"#0000FF\" />\n        <line x1=\"47.5\" y1=\"138\" x2=\"47.5\" y2=\"225\" stroke=\"#0000FF\" />\n        <line x1=\"416.5\" y1=\"191\" x2=\"416.5\" y2=\"224\" stroke=\"#0000FF\" />\n        <line x1=\"113\" y1=\"233.5\" x2=\"181\" y2=\"233.5\" stroke=\"#0000FF\" />\n        <line x1=\"57\" y1=\"0.5\" x2=\"237\" y2=\"0.5\" stroke=\"#0000FF\" />\n      </g>\n      {/** text */}\n      <text x=\"147\" y=\"40\">\n        Back\n      </text>\n      <text x=\"326\" y=\"40\">\n        Front\n      </text>\n      <text x=\"20\" y=\"120\">\n        Right\n      </text>\n      <text x=\"450\" y=\"120\">\n        Left\n      </text>\n      <g\n        className={cx(neck !== \"v\" && \"hidden\")}\n        transform=\"translate(236, 11)\"\n      >\n        <path d=\"M0.5 125.793V0.5H179.5V125.793L169.646 135.646L169.5 135.793V136V210.107L125.234 212.67L90.4178 159.725L89.9986 159.088L89.5814 159.727L54.7538 213.042L10.5 210.178V136V135.793L10.3536 135.646L0.5 125.793Z\" />\n        <path d=\"M45 212.5L87.5 149H92L135 212\" />\n        <line x1=\"20\" y1=\"149\" x2=\"160\" y2=\"149\" className=\"dashed\" />\n        <circle cx=\"90\" cy=\"160\" r=\"5\" />\n        <rect x=\"86\" y=\"126\" width=\"8\" height=\"8\" />\n      </g>\n      <g className={cx(neck !== \"round\" && \"hidden\")}>\n        <path d=\"M246.5 147V146.793L246.354 146.646L236.5 136.793V11.5H415.5V136.793L405.646 146.646L405.5 146.793V147V221.107L361.452 223.657C360.479 205.178 344.973 190.5 326 190.5C306.901 190.5 291.314 205.374 290.531 224.027L246.5 221.178V147Z\" />\n        <path d=\"M370.96 223.608C369.957 199.909 350.212 181 326 181C301.684 181 281.873 200.072 281.028 223.914\" />\n        <line x1=\"256\" y1=\"180.5\" x2=\"396\" y2=\"180.5\" className=\"dashed\" />\n        <circle cx=\"326\" cy=\"189\" r=\"5\" />\n        <rect x=\"322\" y=\"151\" width=\"8\" height=\"8\" />\n      </g>\n      {/** numbers */}\n      <circle cx=\"147\" cy=\"212\" r=\"5\" />\n      <circle cx=\"69\" cy=\"171\" r=\"5\" />\n      <circle cx=\"248\" cy=\"171\" r=\"5\" />\n      <circle cx=\"225\" cy=\"171\" r=\"5\" />\n      <circle cx=\"404\" cy=\"171\" r=\"5\" />\n      <circle cx=\"326\" cy=\"61\" r=\"5\" />\n      <circle cx=\"147\" cy=\"61\" r=\"5\" />\n      <rect x=\"143\" y=\"151\" width=\"8\" height=\"8\" />\n      <rect x=\"89\" y=\"210\" width=\"8\" height=\"8\" />\n      <rect x=\"197\" y=\"210\" width=\"8\" height=\"8\" />\n      <rect x=\"265\" y=\"197\" width=\"8\" height=\"8\" />\n      <rect x=\"379\" y=\"197\" width=\"8\" height=\"8\" />\n    </Wrapper>\n  );\n}\n","import SchemaOverview from \"../../garment_schema/SchemaOverview\";\nimport TopDownVest, { overview } from \"../../garment_schema/TopDownVest\";\nimport { VestMeasurement } from \"../../utils/sizes\";\nimport { VestPattern } from \"../../utils/vestPatternMaker\";\n\nexport interface InstructionProps {\n  schema: VestPattern;\n  measurement: VestMeasurement;\n}\n\ninterface Props {\n  menu: number;\n  size: number;\n}\n\nexport default function Instruction({ menu, size }: Props) {\n  if (menu === 0) {\n    return (\n      <SchemaOverview overview={overview}>\n        <TopDownVest neck=\"round\" />\n      </SchemaOverview>\n    );\n  } else if (menu === 1) {\n    return <div>back</div>;\n  } else if (menu === 2) {\n    return <div>front</div>;\n  } else if (menu === 3) {\n    return <div>body</div>;\n  } else {\n    return <div>bands</div>;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["SchemaOverview","overview","children","notes","w","maxWidth","parts","map","part","i","mb","as","size","label","list","item","j","order","instruction","omit","obj","keys","res","Object","filter","key","indexOf","filterKey","forEach","tag","options","render","props","ref","ch","component","className","class","filteredProps","asIs","omitKeys","interopValidAttr","validAttr","default","filterProps","propsAsIs","toUpperCase","atomic","cx","vars","style","name","variable","result","unit","value","ownStyle","length","__linaria","React","Result","rest","innerRef","displayName","extends","styled","id","direction","TopdownVest","neck","width","height","viewBox","fill","xmlns","d","x1","y1","x2","y2","stroke","x","y","transform","cy","r","Instruction","menu"],"sourceRoot":""}
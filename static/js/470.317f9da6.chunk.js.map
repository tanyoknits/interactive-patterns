{"version":3,"file":"static/js/470.317f9da6.chunk.js","mappings":"yNAMe,SAASA,EAAgBC,GAA4B,IAADC,EAAAD,EAAxBE,MAAAA,OAAK,IAAAD,GAAQA,EACtD,OACEE,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,MAAM,cAAaC,SAAA,EACxBC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,IAAG,kCACmBN,EAAQ,MAAQ,eAAe,mDAIrE,C,4JCCe,SAASO,EAAaT,GAI1B,IAADU,EAHRC,EAAKX,EAALW,MACAC,EAAWZ,EAAXY,YAGAC,GAHWb,EACXc,eAEwCC,EAAAA,EAAAA,UAAiB,IAAEC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAApDK,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,EAAsD,QAAtDV,EAA6BE,EAAYM,UAAa,IAAAR,EAAAA,EAAIE,EAAY,GAA9DS,EAAKD,EAALC,MAAOC,EAASF,EAATE,UACTC,GAAWC,EAAAA,EAAAA,IAAsBH,EAAMI,OAE7C,OACEtB,EAAAA,EAAAA,MAACuB,EAAAA,EAAI,CAACJ,UAAU,SAASK,IAAK,EAAErB,SAAA,CACpB,MAATK,IAAiBJ,EAAAA,EAAAA,KAACqB,EAAAA,EAAI,CAAAtB,SAAEK,KACzBR,EAAAA,EAAAA,MAAC0B,EAAAA,EAAM,CAACC,QAAS,EAAGC,MAAM,OAAMzB,SAAA,EAC9BH,EAAAA,EAAAA,MAACuB,EAAAA,EAAI,CAACC,IAAK,EAAGK,WAAW,SAASC,SAAS,OAAM3B,SAAA,CAC9CM,EAAYsB,OAAS,IACpB3B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CACTC,MAAOxB,EAAYyB,KAAI,SAACC,GAAC,OAAKA,EAAEF,MAAMG,KAAK,KAAK,IAChDrB,aAAcA,EACdsB,SAAU,SAACC,GAAU,OAAKtB,EAAgBsB,EAAG,KAGjDlC,EAAAA,EAAAA,KAACR,EAAAA,EAAgB,QAEnBQ,EAAAA,EAAAA,KAACmC,EAAAA,IAAcC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKtB,GAAK,IAAEC,UAAWA,MACtCf,EAAAA,EAAAA,KAACqC,EAAAA,GAAU,CAACrB,SAAUA,EAAUsB,OAAO,SAI/C,C,2PC1BQC,EAAQC,EAAAA,GAAAA,IAGHC,EAA2B,CACtC,CACEZ,MAAO,CAAC,MAAO,KAAM,IAAK,IAAK,IAAK,MACpCf,OAAO4B,EAAAA,EAAAA,IAAmB,EAAG,IAE/B,CACEb,MAAO,CAAC,MAAO,MAAO,OACtBf,OAAO4B,EAAAA,EAAAA,IAAmB,GAAI,MAIrBC,EAA4B,CACvC,CACEd,MAAO,CAAC,OACRf,OAAO8B,EAAAA,EAAAA,IAAe,EAAG,EAAG,IAE9B,CACEf,MAAO,CAAC,MACRf,OAAO8B,EAAAA,EAAAA,IAAe,EAAG,EAAG,IAE9B,CACEf,MAAO,CAAC,KACRf,OAAO8B,EAAAA,EAAAA,IAAe,EAAG,EAAG,IAE9B,CACEf,MAAO,CAAC,IAAK,IAAK,MAClBf,OAAO8B,EAAAA,EAAAA,IAAe,EAAG,EAAG,IAE9B,CACEf,MAAO,CAAC,MAAO,MAAO,OACtBf,OAAO8B,EAAAA,EAAAA,IAAe,EAAG,EAAG,KAI1BC,EAAoC,EAAC,GAAM,GAAOf,KAAI,SAACgB,GAAK,MAAK,CACrE,CACEjB,MAAO,CAAC,OACRf,OAAOiC,EAAAA,EAAAA,IAAsBD,GAAQ,IAEvC,CACEjB,MAAO,CAAC,KAAM,IAAK,KACnBf,OAAOiC,EAAAA,EAAAA,OAET,CACElB,MAAO,CAAC,KACRf,OAAOiC,EAAAA,EAAAA,IAAsBD,EAAO,IAEtC,CACEjB,MAAO,CAAC,MACRf,OAAOiC,EAAAA,EAAAA,IAAsBD,EAAO,IAEtC,CACEjB,MAAO,CAAC,MAAO,MAAO,OACtBf,OAAOiC,EAAAA,EAAAA,IAAsBD,EAAO,IAEvC,IAEYE,EAAUH,EAAa,GACvBI,EAAkBJ,EAAa,GAE/BK,EAA0B,CACrC,CAAErB,MAAOA,EAAAA,MAAOf,OAAKsB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IAAOe,EAAAA,EAAAA,IAAa,IAAE,IAAEC,WAAOC,MAGhDC,EAIA,CACJ,CACEF,MAAO,WACPG,KAAM,+BACNC,MAA6B,QAAxBC,EAAEC,EAAAA,GAAAA,mBAAsB,IAAAD,GAAQ,QAARE,EAAtBF,EAAwBG,cAAM,IAAAD,OAAR,EAAtBA,EAAiC,GAAGE,KAE7C,CACET,MAAO,oBACPG,KAAM,oDACNC,WAAOH,GAET,CACED,MAAO,YACPG,KAAM,iDACNC,MAAiB,QAAZM,EAAEvB,EAAIqB,cAAM,IAAAE,OAAA,EAAVA,EAAa,GAAGD,KAEzB,CACET,MAAO,QACPG,KAAM,wEACNC,MAAgC,QAA3BO,EAAEL,EAAAA,GAAAA,sBAAyB,IAAAK,GAAQ,QAARC,EAAzBD,EAA2BH,cAAM,IAAAI,OAAR,EAAzBA,EAAoC,GAAGH,KAEhD,CACET,MAAO,aACPG,KAAM,gBACNC,MAA+B,QAA1BS,EAAEP,EAAAA,GAAAA,qBAAwB,IAAAO,OAAA,EAAxBA,EAA0BL,OAAO,GAAGC,MAIzCK,EACJ,+FAEIC,EAAyB,CAC7B,CACEjC,GAAI,cACJkC,MAAO,QACPC,WACErE,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CACZE,MAAO8D,EACP7D,YAAaoC,EACblC,eAAe,KAIrB,CACE2B,GAAI,eACJkC,MAAO,SACPC,WACErE,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CACZE,MAAO8D,EACP7D,YAAasC,EACbpC,eAAe,KAIrB,CACE2B,GAAI,gBACJkC,MAAO,UACPC,WACErE,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CACZE,MAAM,uDACNC,YAAa2C,KAInB,CACEd,GAAI,aACJkC,MAAO,OACPC,WACErE,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CACZE,MAAM,+EACNC,YAAa6C,KAInB,CACEhB,GAAI,aACJkC,MAAO,aACPC,WAAWrE,EAAAA,EAAAA,KAACsE,EAAAA,GAAU,CAACC,KAAMjB,KAE/B,CACEpB,GAAI,OACJkC,MAAO,gBACPC,WACErE,EAAAA,EAAAA,KAACwE,EAAAA,GAAI,CACHD,KAAM,CAAC,KAAM,KAAM,OAAQ,MAAO,MAAO,MAAO,KAAM,KAAM,KAAM,UAM1E,W","sources":["components/InteractiveAlert.tsx","components/StitchPattern.tsx","projects/tiara-vest/stitches.tsx"],"sourcesContent":["import { Alert, AlertIcon } from \"@chakra-ui/react\";\n\ninterface Props {\n  isRow?: boolean;\n}\n\nexport default function InteractiveAlert({ isRow = false }: Props) {\n  return (\n    <Alert width=\"fit-content\">\n      <AlertIcon />\n      Chart is interactive - click a {isRow ? \"row\" : \"stitch group\"} to see the\n      corresponding written instruction.\n    </Alert>\n  );\n}\n","import { Flex, Text, VStack } from \"@chakra-ui/react\";\nimport { MotifBySizeItem } from \"../utils/types\";\nimport { useState } from \"react\";\nimport {\n  MotifComponent,\n  StitchList,\n  getUniqueStsFromChart,\n} from \"@tanyoknits/shared\";\nimport SelectSize from \"./SelectSize\";\nimport InteractiveAlert from \"./InteractiveAlert\";\ninterface Props {\n  intro?: string;\n  motifBySize: MotifBySizeItem[];\n  showReflected?: boolean;\n}\nexport default function StitchPattern({\n  intro,\n  motifBySize,\n  showReflected = false,\n}: Props) {\n  const [selectedSize, setSelectedSize] = useState<number>(0);\n  const { motif, direction } = motifBySize[selectedSize] ?? motifBySize[0];\n  const stitches = getUniqueStsFromChart(motif.chart);\n\n  return (\n    <Flex direction=\"column\" gap={6}>\n      {intro != null && <Text>{intro}</Text>}\n      <VStack spacing={6} align=\"left\">\n        <Flex gap={6} alignItems=\"center\" flexWrap=\"wrap\">\n          {motifBySize.length > 1 && (\n            <SelectSize\n              sizes={motifBySize.map((m) => m.sizes.join(\", \"))}\n              selectedSize={selectedSize}\n              onChange={(id: number) => setSelectedSize(id)}\n            />\n          )}\n          <InteractiveAlert />\n        </Flex>\n        <MotifComponent {...motif} direction={direction} />\n        <StitchList stitches={stitches} hasWS={true} />\n      </VStack>\n    </Flex>\n  );\n}\n","import {\n  Abbr,\n  Techniques,\n  definition,\n  getMossMotif,\n  techniques,\n} from \"@tanyoknits/shared\";\nimport {\n  getBasicBraidMotif,\n  getZigZagMotif,\n  getCenterDiamondMotif,\n} from \"@tanyoknits/shared\";\nimport { MotifBySizeItem, PageInfo } from \"../../utils/types\";\nimport { sizes } from \"./sizes\";\nimport StitchPattern from \"../../components/StitchPattern\";\n\n// Stitches in charts\nconst { m1l } = definition;\n\n// Charts\nexport const braid: MotifBySizeItem[] = [\n  {\n    sizes: [\"2XS\", \"XS\", \"S\", \"M\", \"L\", \"XL\"],\n    motif: getBasicBraidMotif(9, 8),\n  },\n  {\n    sizes: [\"2XL\", \"3XL\", \"4XL\"],\n    motif: getBasicBraidMotif(12, 12),\n  },\n];\n\nexport const zigzag: MotifBySizeItem[] = [\n  {\n    sizes: [\"2XS\"],\n    motif: getZigZagMotif(2, 2, 4),\n  },\n  {\n    sizes: [\"XS\"],\n    motif: getZigZagMotif(3, 2, 4),\n  },\n  {\n    sizes: [\"S\"],\n    motif: getZigZagMotif(3, 1, 6),\n  },\n  {\n    sizes: [\"M\", \"L\", \"XL\"],\n    motif: getZigZagMotif(3, 2, 6),\n  },\n  {\n    sizes: [\"2XL\", \"3XL\", \"4XL\"],\n    motif: getZigZagMotif(3, 3, 6),\n  },\n];\n\nconst centerMotifs: MotifBySizeItem[][] = [true, false].map((hasMB) => [\n  {\n    sizes: [\"2XS\"],\n    motif: getCenterDiamondMotif(hasMB, -1),\n  },\n  {\n    sizes: [\"XS\", \"S\", \"M\"],\n    motif: getCenterDiamondMotif(),\n  },\n  {\n    sizes: [\"L\"],\n    motif: getCenterDiamondMotif(hasMB, 1),\n  },\n  {\n    sizes: [\"XL\"],\n    motif: getCenterDiamondMotif(hasMB, 2),\n  },\n  {\n    sizes: [\"2XL\", \"3XL\", \"4XL\"],\n    motif: getCenterDiamondMotif(hasMB, 3),\n  },\n]);\n\nexport const diamond = centerMotifs[0];\nexport const diamondNoBobble = centerMotifs[1];\n\nexport const moss: MotifBySizeItem[] = [\n  { sizes: sizes, motif: { ...getMossMotif(2), title: undefined } },\n];\n\nconst usedTechniques: {\n  title: string;\n  desc: string;\n  video: string | undefined;\n}[] = [\n  {\n    title: \"Cable CO\",\n    desc: \"Used for CO of each shoulder\",\n    video: techniques[\"Cable CO\"]?.videos?.[0].url,\n  },\n  {\n    title: \"Knit On CO (koco)\",\n    desc: \"Used to create new sts along neckline or underarm\",\n    video: undefined,\n  },\n  {\n    title: \"m1l & m1r\",\n    desc: \"Make 1 left/right, used for arm inset increase\",\n    video: m1l.videos?.[0].url,\n  },\n  {\n    title: \"w & t\",\n    desc: \"Wrap & turn; short row technique, my preference is German short row. \",\n    video: techniques[\"Wrap & Turn\"]?.videos?.[0].url,\n  },\n  {\n    title: \"Sewn on BO\",\n    desc: \"Or tubular BO\",\n    video: techniques[\"Tubular BO\"]?.videos[0].url,\n  },\n];\n\nconst REFLECT_TEXT =\n  \"Reflected version of this motif is also used to make a symmetrical pattern on front and back\";\n\nconst stitchPage: PageInfo[] = [\n  {\n    id: \"braid-chart\",\n    label: \"Braid\",\n    component: (\n      <StitchPattern\n        intro={REFLECT_TEXT}\n        motifBySize={braid}\n        showReflected={true}\n      />\n    ),\n  },\n  {\n    id: \"zigzag-chart\",\n    label: \"Zigzag\",\n    component: (\n      <StitchPattern\n        intro={REFLECT_TEXT}\n        motifBySize={zigzag}\n        showReflected={true}\n      />\n    ),\n  },\n  {\n    id: \"diamond-chart\",\n    label: \"Diamond\",\n    component: (\n      <StitchPattern\n        intro=\"Same motif but without bobbles are used in the back.\"\n        motifBySize={diamond}\n      />\n    ),\n  },\n  {\n    id: \"moss-chart\",\n    label: \"Moss\",\n    component: (\n      <StitchPattern\n        intro=\"This motif is used on the side as front and back connects to the whole body.\"\n        motifBySize={moss}\n      />\n    ),\n  },\n  {\n    id: \"techniques\",\n    label: \"Techniques\",\n    component: <Techniques list={usedTechniques} />,\n  },\n  {\n    id: \"abbr\",\n    label: \"Abbreviations\",\n    component: (\n      <Abbr\n        list={[\"CO\", \"BO\", \"cont\", \"inc\", \"dec\", \"rep\", \"RS\", \"SR\", \"WS\", \"pu\"]}\n      />\n    ),\n  },\n];\n\nexport default stitchPage;\n"],"names":["InteractiveAlert","_ref","_ref$isRow","isRow","_jsxs","Alert","width","children","_jsx","AlertIcon","StitchPattern","_motifBySize$selected","intro","motifBySize","_useState","showReflected","useState","_useState2","_slicedToArray","selectedSize","setSelectedSize","_ref2","motif","direction","stitches","getUniqueStsFromChart","chart","Flex","gap","Text","VStack","spacing","align","alignItems","flexWrap","length","SelectSize","sizes","map","m","join","onChange","id","MotifComponent","_objectSpread","StitchList","hasWS","m1l","definition","braid","getBasicBraidMotif","zigzag","getZigZagMotif","centerMotifs","hasMB","getCenterDiamondMotif","diamond","diamondNoBobble","moss","getMossMotif","title","undefined","usedTechniques","desc","video","_techniques$CableCO","techniques","_techniques$CableCO$v","videos","url","_m1l$videos","_techniques$WrapTu","_techniques$WrapTu$vi","_techniques$TubularB","REFLECT_TEXT","stitchPage","label","component","Techniques","list","Abbr"],"sourceRoot":""}
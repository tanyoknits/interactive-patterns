{"version":3,"file":"static/js/635.6de080cf.chunk.js","mappings":"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","sources":["components/InteractiveAlert.tsx","components/StitchPattern.tsx","patternMakers/setInSleeve/pullover.ts","projects/big-winter-sweater/StitchesPage.tsx","projects/big-winter-sweater/profile.ts","projects/big-winter-sweater/sizes.ts","projects/big-winter-sweater/stitches.tsx"],"sourcesContent":["import { Alert, AlertIcon } from \"@chakra-ui/react\";\n\ninterface Props {\n  isRow?: boolean;\n}\n\nexport default function InteractiveAlert({ isRow = false }: Props) {\n  return (\n    <Alert width=\"fit-content\">\n      <AlertIcon />\n      Chart is interactive - click a {isRow ? \"row\" : \"stitch group\"} to see the\n      corresponding written instruction.\n    </Alert>\n  );\n}\n","import { Flex, Text, VStack } from \"@chakra-ui/react\";\nimport { MotifBySizeItem } from \"../utils/types\";\nimport { useState } from \"react\";\nimport {\n  MotifComponent,\n  StitchList,\n  getUniqueStsFromChart,\n} from \"@tanyoknits/shared\";\nimport SelectSize from \"./SelectSize\";\nimport InteractiveAlert from \"./InteractiveAlert\";\ninterface Props {\n  intro?: string;\n  motifBySize: MotifBySizeItem[];\n  showReflected?: boolean;\n}\nexport default function StitchPattern({\n  intro,\n  motifBySize,\n  showReflected = false,\n}: Props) {\n  const [selectedSize, setSelectedSize] = useState<number>(0);\n  const { motif, direction } = motifBySize[selectedSize] ?? motifBySize[0];\n  const stitches = getUniqueStsFromChart(motif.chart);\n\n  return (\n    <Flex direction=\"column\" gap={6}>\n      {intro != null && <Text>{intro}</Text>}\n      <VStack spacing={6} align=\"left\">\n        <Flex gap={6} alignItems=\"center\" flexWrap=\"wrap\">\n          {motifBySize.length > 1 && (\n            <SelectSize\n              sizes={motifBySize.map((m) => m.sizes.join(\", \"))}\n              selectedSize={selectedSize}\n              onChange={(id: number) => setSelectedSize(id)}\n            />\n          )}\n          <InteractiveAlert />\n        </Flex>\n        <MotifComponent {...motif} direction={direction} />\n        <StitchList stitches={stitches} hasWS={true} />\n      </VStack>\n    </Flex>\n  );\n}\n","import { getRound } from \"@tanyoknits/shared\";\nimport { setInSleevePulloverMeasurement } from \"../../utils/sizeBase\";\nimport { getCoreGaugeItems } from \"./common\";\nimport { SetInSleevePulloverGaugeProps } from \"./types\";\n\nexport function getGaugeItems(\n  ms: setInSleevePulloverMeasurement,\n  stsGauge: number,\n  rowGauge: number,\n  hasOddSts: boolean = false,\n  adjHalfBody?: number\n): SetInSleevePulloverGaugeProps {\n  const coreItems = getCoreGaugeItems(\n    ms,\n    stsGauge,\n    rowGauge,\n    hasOddSts,\n    adjHalfBody\n  );\n\n  return {\n    ...coreItems,\n    sleeveLength: getRound(ms.sleeve_length_from_underarm * rowGauge),\n    cuff: getRound(ms.cuff * stsGauge),\n    wrist: getRound(ms.wrist * stsGauge),\n  };\n}\n\nexport function getTotalSts(\n  ms: setInSleevePulloverMeasurement,\n  stsGauge: number,\n  rowGauge: number\n): number {\n  const bodyRect =\n    ms.total_length * rowGauge * ms.bust_circumference * stsGauge;\n\n  // neck triangle\n  const neck = (ms.neck_back_depth * rowGauge * ms.neck_width * stsGauge) / 2;\n\n  // super rough estimate of sleeve triangle\n  const sleeve =\n    (ms.sleeve_length_from_underarm *\n      rowGauge *\n      ms.armhole_depth *\n      2 *\n      stsGauge) /\n    2;\n\n  return bodyRect - neck + sleeve * 2;\n}\n","import { PatternWithMenusProps } from \"../../layout/PageWithMenus\";\nimport stitchPage from \"./stitches\";\n\nexport default function StitchPage({ menu }: PatternWithMenusProps) {\n  return <>{stitchPage[menu].component}</>;\n}\n","import { needles } from \"../../utils/needles\";\nimport { ProjectProfile } from \"../../utils/types\";\n\nconst profile: ProjectProfile = {\n  yarn: {\n    maker: \"Knit Picks\",\n    line: \"Swish bulky\",\n    color: \"Dublin\",\n    url: \"https://www.knitpicks.com/dublin/p/29626\",\n    shape: \"hank\",\n    yards: 137,\n    grams: 100,\n  },\n  needles: [\n    { type: \"circular\", size: needles[14], usage: \"main body & sleeves\" },\n    { type: \"circular\", size: needles[12], usage: \"ribs\" },\n  ],\n  gauge: {\n    sts: \"Stockinette stitch\",\n    sts_count: 14,\n    row_count: 20,\n    needle: needles[14],\n  },\n  notions: [\"Tapestry needle\", \"Stitch markers\"],\n  difficulty: \"Intermediate\",\n  photoCount: 0,\n};\n\nexport default profile;\n","import {\n  Size,\n  FOSizing,\n  baseFOSizing,\n  FOPart,\n  baseBodySizing,\n  setInSleevePulloverMeasurement,\n  setInSleevePulloverCoreParts,\n  SetInSleevePulloverCorePart,\n} from \"../../utils/sizeBase\";\nimport { getIntroSizingInfo } from \"../../utils/misc\";\nimport { IntroSizing } from \"../../utils/types\";\nimport profile from \"./profile\";\nimport { getTotalSts } from \"../../patternMakers/setInSleeve/pullover\";\n\nexport const sizes: Size[] = [\"L\"];\n\nconst baseMeasurement: FOSizing = {\n  L: {\n    ...baseFOSizing.L,\n    neck_width: 8,\n    shoulder_width: 5.5,\n    underarm: 1.25,\n    neck_circumference: 18,\n    bust_circumference: 42,\n    under_arm_circumference: 19,\n    armhole_depth: 10.5,\n    neck_depth: 2.5,\n    total_length: 26,\n    wrist_circumference: 8,\n    sleeve_length_from_underarm: 21,\n    neck_band_height: 8,\n    hem: 2.25,\n  },\n};\n\nexport const measurements: Partial<Record<FOPart, number>>[] = sizes.map(\n  (size) => {\n    const ms = baseMeasurement[size] ?? {};\n    return Object.keys(ms)\n      .filter((key) =>\n        setInSleevePulloverCoreParts.includes(\n          key as SetInSleevePulloverCorePart\n        )\n      )\n      .reduce((cur, key) => {\n        return Object.assign(cur, {\n          [key]: ms?.[key as SetInSleevePulloverCorePart],\n        });\n      }, {});\n  }\n);\n\nconst totalStsBySize: number[] = measurements.map((m, i) => {\n  const schema = getTotalSts(\n    m as setInSleevePulloverMeasurement,\n    profile.gauge.sts_count,\n    profile.gauge.row_count\n  );\n\n  return schema;\n});\n\nexport const introSizing: IntroSizing = getIntroSizingInfo(\n  sizes,\n  baseBodySizing,\n  measurements,\n  totalStsBySize,\n  [\"bust\"],\n  [\"bust_circumference\", \"sleeve_length_from_underarm\", \"total_length\"],\n  // TODO: add final weight later\n  { size: \"L\", grams: 600 }\n);\n","import { Abbr, Techniques, definition, techniques } from \"@tanyoknits/shared\";\nimport { getBasicBraidMotif } from \"@tanyoknits/shared\";\nimport { MotifBySizeItem, PageInfo } from \"../../utils/types\";\nimport { sizes } from \"./sizes\";\nimport StitchPattern from \"../../components/StitchPattern\";\n\n// Stitches in charts\nconst { m1l } = definition;\n\n// Charts\nexport const bigBraid: MotifBySizeItem[] = [\n  {\n    sizes,\n    motif: { ...getBasicBraidMotif(18, 16), title: \"Big braid\" },\n  },\n];\n\nconst usedTechniques: {\n  title: string;\n  desc: string;\n  video: string | undefined;\n}[] = [\n  {\n    title: \"m1l & m1r\",\n    desc: \"Make 1 left/right, used for neckline increase\",\n    video: m1l.videos?.[0].url,\n  },\n  {\n    title: \"w&t\",\n    desc: \"Wrap & turn; short row technique, my preference is German short row. \",\n    video: techniques[\"Wrap & Turn\"]?.videos?.[0].url,\n  },\n  {\n    title: \"Cable CO\",\n    desc: \"Used for CO of each shoulder\",\n    video: techniques[\"Cable CO\"]?.videos?.[0].url,\n  },\n  {\n    title: \"Sewn on BO\",\n    desc: \"Or tubular BO\",\n    video: techniques[\"Tubular BO\"]?.videos[0].url,\n  },\n];\n\nconst stitchPage: PageInfo[] = [\n  {\n    id: \"big-braid\",\n    label: \"Big Braid\",\n    component: (\n      <StitchPattern\n        intro=\"Following stitch pattern is incorporated on the front, below each shoulder. A reflected version is also used on the other side of the front\"\n        motifBySize={bigBraid}\n      />\n    ),\n  },\n  {\n    id: \"techniques\",\n    label: \"Techniques\",\n    component: <Techniques list={usedTechniques} />,\n  },\n  {\n    id: \"abbr\",\n    label: \"Abbreviations\",\n    component: (\n      <Abbr\n        list={[\n          \"bef\",\n          \"BO\",\n          \"beg\",\n          \"BOR\",\n          \"CO\",\n          \"dec\",\n          \"foll\",\n          \"inc\",\n          \"pm*\",\n          \"sm*\",\n          \"rm*\",\n          \"rep\",\n          \"rnd\",\n          \"SR\",\n          \"tog\",\n          \"WS\",\n          \"RS\",\n          \"cont\",\n          \"incl\",\n          \"appx\",\n        ]}\n      />\n    ),\n  },\n];\n\nexport default stitchPage;\n"],"names":["InteractiveAlert","_ref","_ref$isRow","isRow","_jsxs","Alert","width","children","_jsx","AlertIcon","StitchPattern","_motifBySize$selected","intro","motifBySize","_useState","showReflected","useState","_useState2","_slicedToArray","selectedSize","setSelectedSize","_ref2","motif","direction","stitches","getUniqueStsFromChart","chart","Flex","gap","Text","VStack","spacing","align","alignItems","flexWrap","length","SelectSize","sizes","map","m","join","onChange","id","MotifComponent","_objectSpread","StitchList","hasWS","getGaugeItems","ms","stsGauge","rowGauge","hasOddSts","arguments","undefined","adjHalfBody","coreItems","getCoreGaugeItems","sleeveLength","getRound","sleeve_length_from_underarm","cuff","wrist","getTotalSts","total_length","bust_circumference","neck_back_depth","neck_width","armhole_depth","StitchPage","menu","_Fragment","stitchPage","component","profile","yarn","maker","line","color","url","shape","yards","grams","needles","type","size","usage","gauge","sts","sts_count","row_count","needle","notions","difficulty","photoCount","baseMeasurement","L","baseFOSizing","shoulder_width","underarm","neck_circumference","under_arm_circumference","neck_depth","wrist_circumference","neck_band_height","hem","measurements","_baseMeasurement$size","Object","keys","filter","key","setInSleevePulloverCoreParts","reduce","cur","assign","_defineProperty","totalStsBySize","i","introSizing","getIntroSizingInfo","baseBodySizing","m1l","definition","bigBraid","getBasicBraidMotif","title","usedTechniques","desc","video","_m1l$videos","videos","_techniques$WrapTu","techniques","_techniques$WrapTu$vi","_techniques$CableCO","_techniques$CableCO$v","_techniques$TubularB","label","Techniques","list","Abbr"],"sourceRoot":""}
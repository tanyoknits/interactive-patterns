{"version":3,"file":"static/js/623.b516d82c.chunk.js","mappings":"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","sources":["components/IntroCard.tsx","components/IntroSizingTable.tsx","components/Photos.tsx","components/Intro.tsx","patternMakers/setInSleeve/pullover.ts","projects/big-winter-sweater/IntroPage.tsx","projects/big-winter-sweater/profile.ts","projects/big-winter-sweater/sizes.ts","webpack://@tanyoknits/interactive-patterns/./src/components/IntroSizingTable.tsx?8db5"],"sourcesContent":["import { Card, CardBody, Divider, Heading } from \"@chakra-ui/react\";\n\ninterface Props {\n  title: string;\n  children: React.ReactNode;\n}\nexport default function IntroCard({ title, children }: Props) {\n  return (\n    <Card\n      variant=\"elevated\"\n      style={{\n        backgroundColor: \"var(--bg)\",\n        width: \"fit-content\",\n        height: \"fit-content\",\n        maxWidth: \"100%\",\n      }}\n    >\n      <CardBody>\n        <Heading\n          as=\"h2\"\n          size=\"md\"\n          mb={4}\n          style={{ whiteSpace: \"nowrap\" }}\n          pr={1}\n        >\n          {title}\n        </Heading>\n        <Divider variant=\"dashed\" mb={4} />\n        {children}\n      </CardBody>\n    </Card>\n  );\n}\n","import { Table, Td, Tr, Th, Tbody, Box } from \"@chakra-ui/react\";\nimport {\n  getCapitalized,\n  getInchAndCm,\n  getInchAndCmRange,\n  getInchRange,\n  getYdAndM,\n} from \"@tanyoknits/shared\";\nimport { IntroSizing, YarnInfo } from \"../utils/types\";\nimport { css, cx } from \"@linaria/core\";\n\nexport const styles = {\n  table: css`\n    th {\n      border-color: transparent;\n      padding-left: 0;\n      padding-bottom: 4px;\n    }\n    td {\n      padding-left: 0;\n      padding-top: 8px;\n      padding-bottom: 8px;\n      border-color: var(--oc-gray-4);\n      white-space: nowrap;\n    }\n  `,\n  newLine: css`\n    white-space: pre-line !important;\n  `,\n};\n\ninterface Props {\n  introSizing: IntroSizing;\n  yarn: YarnInfo;\n}\n\nexport default function IntroSizingTable({ introSizing, yarn }: Props) {\n  const { totalSts, bodyParts, foParts, materialBase, sizes } = introSizing;\n\n  const yarnBySize = sizes.map((_, i) => {\n    const grams =\n      (materialBase.grams * totalSts[i]) /\n      totalSts[sizes.indexOf(materialBase.size) ?? 0];\n    const yards = (yarn.yards * grams) / yarn.grams;\n    return { grams, yards, count: Math.ceil(grams / yarn.grams) };\n  });\n\n  return (\n    <Box overflowX=\"auto\">\n      <Table className={cx(styles.table)}>\n        <Tbody>\n          <Tr>\n            <Td />\n            {sizes.map((s, i) => (\n              <Td key={i} fontWeight={600} isNumeric>\n                {s}\n              </Td>\n            ))}\n          </Tr>\n          <Tr>\n            <Th>Body size</Th>\n          </Tr>\n          {bodyParts.map((p, i) => {\n            const sizeRanges = getInchRange(p.sizes);\n            return (\n              <Tr key={i}>\n                <Td>{getCapitalized(p.part)}</Td>\n                {sizeRanges.map((range, j) => {\n                  const rangeText = getInchAndCmRange(range);\n                  return (\n                    <Td key={j} isNumeric>\n                      {rangeText[0]}\n                      <br />\n                      {rangeText[1]}\n                    </Td>\n                  );\n                })}\n              </Tr>\n            );\n          })}\n          <Tr>\n            <Th>Finished measurement</Th>\n          </Tr>\n          {foParts.map((p, i) => (\n            <Tr key={i}>\n              <Td>{getCapitalized(p.part)}</Td>\n              {p.sizes.map((size, j) => (\n                <Td key={j} isNumeric className={cx(styles.newLine)}>\n                  {getInchAndCm(size, \"\\n\")}\n                </Td>\n              ))}\n            </Tr>\n          ))}\n          <Tr>\n            <Th>Yarn needed</Th>\n          </Tr>\n          <Tr>\n            <Td>{yarn.shape}(s)</Td>\n            {yarnBySize.map((size, i) => (\n              <Td key={i} isNumeric className={cx(styles.newLine)}>\n                {size.count}\n              </Td>\n            ))}\n          </Tr>\n          <Tr>\n            <Td>Yard</Td>\n            {yarnBySize.map((size, i) => (\n              <Td key={i} isNumeric className={cx(styles.newLine)}>\n                {getYdAndM(size.yards, \"\\n\")}\n              </Td>\n            ))}\n          </Tr>\n          <Tr>\n            <Td>Weight</Td>\n            {yarnBySize.map((size, i) => (\n              <Td key={i} isNumeric className={cx(styles.newLine)}>\n                {Math.round(size.grams)}g\n              </Td>\n            ))}\n          </Tr>\n        </Tbody>\n      </Table>\n    </Box>\n  );\n}\n","import { Box, Card } from \"@chakra-ui/react\";\n\ninterface Props {\n  id: string;\n  count: number;\n}\n\nfunction Photo({ id, number }: { id: string; number: string }) {\n  return (\n    <Card\n      variant=\"elevated\"\n      height=\"xs\"\n      width=\"xs\"\n      style={{\n        background: `url(${process.env.PUBLIC_URL}/photos/${id}-0${number}.jpg)`,\n        backgroundSize: \"cover\",\n      }}\n    />\n  );\n}\n\nexport default function Photos({ id, count }: Props) {\n  return (\n    <Box width=\"xs\">\n      <Photo id={id} number=\"1\" />\n    </Box>\n  );\n}\n","import { VStack, Text, Wrap, UnorderedList, ListItem } from \"@chakra-ui/react\";\nimport { getYdAndM } from \"@tanyoknits/shared\";\nimport { getNeedleText } from \"../utils/needles\";\nimport IntroCard from \"./IntroCard\";\nimport IntroSizingTable from \"./IntroSizingTable\";\nimport Photos from \"./Photos\";\nimport { IntroSizing, ProjectProfile } from \"../utils/types\";\nimport { ProjectID } from \"../projects/list\";\n\ninterface Props extends ProjectProfile {\n  projectID: ProjectID;\n  introSizing: IntroSizing;\n}\n\nexport default function IntroComponent({\n  projectID,\n  yarn,\n  needles,\n  gauge,\n  notions,\n  difficulty,\n  photoCount,\n  introSizing,\n}: Props) {\n  return (\n    <VStack px={4} spacing={4} align=\"left\">\n      <Wrap spacing={4}>\n        {photoCount > 0 && <Photos id={projectID} count={photoCount} />}\n        <Wrap width={{ md: \"100%\", lg: \"5xl\" }} spacing={4}>\n          <IntroCard title=\"🧶 Yarn\">\n            <>\n              <a href={yarn.url} target=\"_parent\">\n                <Text variant=\"link\">{yarn.line}</Text>\n              </a>\n              by {yarn.maker}\n              <Text>Sample color: {yarn.color}</Text>\n              <Text>\n                1 {yarn.shape} = {getYdAndM(yarn.yards)} / {yarn.grams}g\n              </Text>\n            </>\n          </IntroCard>\n          <IntroCard title=\"🪡 Needles\">\n            <UnorderedList>\n              {needles.map((needle, i) => (\n                <ListItem key={i}>\n                  {getNeedleText(needle.size)} {needle.type} - {needle.usage}\n                </ListItem>\n              ))}\n            </UnorderedList>\n          </IntroCard>\n          <IntroCard title=\"📐 Gauge\">\n            <Text>\n              {gauge.sts_count} sts and {gauge.row_count} rows = 4\" / 10cm\n            </Text>\n            <Text>\n              in {gauge.sts} with {getNeedleText(gauge.needle)}\n            </Text>\n          </IntroCard>\n          <IntroCard title=\"🧷 Notions\">\n            <UnorderedList>\n              {notions.map((notion, i) => (\n                <ListItem key={i}>{notion}</ListItem>\n              ))}\n            </UnorderedList>\n          </IntroCard>\n          <IntroCard title=\"🌟 Difficulty\">\n            <Text>{difficulty}</Text>\n          </IntroCard>\n        </Wrap>\n      </Wrap>\n      <IntroCard title=\"🔢 Sizing & Measurement\">\n        <IntroSizingTable introSizing={introSizing} yarn={yarn} />\n      </IntroCard>\n    </VStack>\n  );\n}\n","import { getRound } from \"@tanyoknits/shared\";\nimport { setInSleevePulloverMeasurement } from \"../../utils/sizeBase\";\nimport { getCoreGaugeItems } from \"./common\";\nimport { SetInSleevePulloverGaugeProps } from \"./types\";\n\nexport function getGaugeItems(\n  ms: setInSleevePulloverMeasurement,\n  stsGauge: number,\n  rowGauge: number,\n  hasOddSts: boolean = false,\n  adjHalfBody?: number\n): SetInSleevePulloverGaugeProps {\n  const coreItems = getCoreGaugeItems(\n    ms,\n    stsGauge,\n    rowGauge,\n    hasOddSts,\n    adjHalfBody\n  );\n\n  return {\n    ...coreItems,\n    sleeveLength: getRound(ms.sleeve_length_from_underarm * rowGauge),\n    cuff: getRound(ms.cuff * stsGauge),\n    wrist: getRound(ms.wrist * stsGauge),\n  };\n}\n\nexport function getTotalSts(\n  ms: setInSleevePulloverMeasurement,\n  stsGauge: number,\n  rowGauge: number\n): number {\n  const bodyRect =\n    ms.total_length * rowGauge * ms.bust_circumference * stsGauge;\n\n  // neck triangle\n  const neck = (ms.neck_back_depth * rowGauge * ms.neck_width * stsGauge) / 2;\n\n  // super rough estimate of sleeve triangle\n  const sleeve =\n    (ms.sleeve_length_from_underarm *\n      rowGauge *\n      ms.armhole_depth *\n      2 *\n      stsGauge) /\n    2;\n\n  return bodyRect - neck + sleeve * 2;\n}\n","import profile from \"./profile\";\nimport IntroComponent from \"../../components/Intro\";\nimport { introSizing } from \"./sizes\";\n\ninterface Props {\n  projectID: string;\n}\nexport default function Intro({ projectID }: Props) {\n  return (\n    <IntroComponent\n      projectID={projectID}\n      {...profile}\n      introSizing={introSizing}\n    />\n  );\n}\n","import { needles } from \"../../utils/needles\";\nimport { ProjectProfile } from \"../../utils/types\";\n\nconst profile: ProjectProfile = {\n  yarn: {\n    maker: \"Knit Picks\",\n    line: \"Swish bulky\",\n    color: \"Dublin\",\n    url: \"https://www.knitpicks.com/dublin/p/29626\",\n    shape: \"hank\",\n    yards: 137,\n    grams: 100,\n  },\n  needles: [\n    { type: \"circular\", size: needles[14], usage: \"main body & sleeves\" },\n    { type: \"circular\", size: needles[12], usage: \"ribs\" },\n  ],\n  gauge: {\n    sts: \"Stockinette stitch\",\n    sts_count: 14,\n    row_count: 20,\n    needle: needles[14],\n  },\n  notions: [\"Tapestry needle\", \"Stitch markers\"],\n  difficulty: \"Intermediate\",\n  photoCount: 0,\n};\n\nexport default profile;\n","import {\n  Size,\n  FOSizing,\n  baseFOSizing,\n  FOPart,\n  baseBodySizing,\n  setInSleevePulloverMeasurement,\n  setInSleevePulloverCoreParts,\n  SetInSleevePulloverCorePart,\n} from \"../../utils/sizeBase\";\nimport { getIntroSizingInfo } from \"../../utils/misc\";\nimport { IntroSizing } from \"../../utils/types\";\nimport profile from \"./profile\";\nimport { getTotalSts } from \"../../patternMakers/setInSleeve/pullover\";\n\nexport const sizes: Size[] = [\"L\"];\n\nconst baseMeasurement: FOSizing = {\n  L: {\n    ...baseFOSizing.L,\n    neck_width: 8,\n    shoulder_width: 5.5,\n    underarm: 1.25,\n    neck_circumference: 18,\n    bust_circumference: 42,\n    under_arm_circumference: 19,\n    armhole_depth: 10.5,\n    neck_depth: 2.5,\n    total_length: 26,\n    wrist_circumference: 8,\n    sleeve_length_from_underarm: 21,\n    neck_band_height: 8,\n    hem: 2.25,\n  },\n};\n\nexport const measurements: Partial<Record<FOPart, number>>[] = sizes.map(\n  (size) => {\n    const ms = baseMeasurement[size] ?? {};\n    return Object.keys(ms)\n      .filter((key) =>\n        setInSleevePulloverCoreParts.includes(\n          key as SetInSleevePulloverCorePart\n        )\n      )\n      .reduce((cur, key) => {\n        return Object.assign(cur, {\n          [key]: ms?.[key as SetInSleevePulloverCorePart],\n        });\n      }, {});\n  }\n);\n\nconst totalStsBySize: number[] = measurements.map((m, i) => {\n  const schema = getTotalSts(\n    m as setInSleevePulloverMeasurement,\n    profile.gauge.sts_count,\n    profile.gauge.row_count\n  );\n\n  return schema;\n});\n\nexport const introSizing: IntroSizing = getIntroSizingInfo(\n  sizes,\n  baseBodySizing,\n  measurements,\n  totalStsBySize,\n  [\"bust\"],\n  [\"bust_circumference\", \"sleeve_length_from_underarm\", \"total_length\"],\n  // TODO: add final weight later\n  { size: \"L\", grams: 600 }\n);\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["IntroCard","_ref","title","children","_jsx","Card","variant","style","backgroundColor","width","height","maxWidth","_jsxs","CardBody","Heading","as","size","mb","whiteSpace","pr","Divider","styles","table","newLine","IntroSizingTable","introSizing","yarn","totalSts","bodyParts","foParts","materialBase","sizes","yarnBySize","map","_","i","_sizes$indexOf","grams","indexOf","yards","count","Math","ceil","Box","overflowX","Table","className","cx","Tbody","Tr","Td","s","fontWeight","isNumeric","Th","p","sizeRanges","getInchRange","getCapitalized","part","range","j","rangeText","getInchAndCmRange","getInchAndCm","shape","getYdAndM","round","Photo","id","number","background","concat","process","backgroundSize","Photos","_ref2","IntroComponent","projectID","needles","gauge","notions","difficulty","photoCount","VStack","px","spacing","align","Wrap","md","lg","_Fragment","href","url","target","Text","line","maker","color","UnorderedList","needle","ListItem","getNeedleText","type","usage","sts_count","row_count","sts","notion","getGaugeItems","ms","stsGauge","rowGauge","hasOddSts","arguments","length","undefined","adjHalfBody","coreItems","getCoreGaugeItems","_objectSpread","sleeveLength","getRound","sleeve_length_from_underarm","cuff","wrist","getTotalSts","total_length","bust_circumference","neck_back_depth","neck_width","armhole_depth","Intro","profile","baseMeasurement","L","baseFOSizing","shoulder_width","underarm","neck_circumference","under_arm_circumference","neck_depth","wrist_circumference","neck_band_height","hem","measurements","_baseMeasurement$size","Object","keys","filter","key","setInSleevePulloverCoreParts","reduce","cur","assign","_defineProperty","totalStsBySize","m","getIntroSizingInfo","baseBodySizing"],"sourceRoot":""}
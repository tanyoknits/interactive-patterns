{"version":3,"file":"static/js/752.9b13672f.chunk.js","mappings":"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","sources":["components/InteractiveAlert.tsx","components/MotifBySize.tsx","components/StitchPattern.tsx","projects/pine-pullover/stitches.tsx"],"sourcesContent":["import { Alert, AlertIcon } from \"@chakra-ui/react\";\n\ninterface Props {\n  isRow?: boolean;\n}\n\nexport default function InteractiveAlert({ isRow = false }: Props) {\n  return (\n    <Alert width=\"fit-content\">\n      <AlertIcon />\n      Chart is interactive - click a {isRow ? \"row\" : \"stitch group\"} to see the\n      corresponding written instruction.\n    </Alert>\n  );\n}\n","import { Select, VStack, Text, Flex } from \"@chakra-ui/react\";\nimport {\n  Direction,\n  MotifComponent,\n  MotifInPattern,\n  StitchList,\n  getUniqueStsFromChart,\n} from \"@tanyoknits/shared\";\nimport { useState } from \"react\";\nimport InteractiveAlert from \"./InteractiveAlert\";\n\ninterface Props {\n  motifBySize: { size: string; motif: MotifInPattern; direction?: Direction }[];\n}\n\nexport default function MotifBySize({ motifBySize }: Props) {\n  const [selectedSize, setSelectedSize] = useState<number>(0);\n  const { motif, direction } = motifBySize[selectedSize] ?? motifBySize[0];\n  const stitches = getUniqueStsFromChart(motif.chart);\n  return (\n    <VStack spacing={6} align=\"left\">\n      <Flex\n        gap={4}\n        align={[\"left\", \"center\"]}\n        flexDirection={[\"column\", \"row\"]}\n      >\n        {motifBySize.length > 1 && (\n          <>\n            <Text variant=\"bold\">Select size</Text>\n            <Select\n              onChange={(e) => setSelectedSize(+e.target.value)}\n              width=\"fit-content\"\n              defaultValue={selectedSize}\n              mr={[0, 8]}\n            >\n              {motifBySize.map((motif, i) => (\n                <option key={i} value={i}>\n                  {motif.size}\n                </option>\n              ))}\n            </Select>\n          </>\n        )}\n        <InteractiveAlert />\n      </Flex>\n      <MotifComponent {...motif} direction={direction} />\n      <StitchList stitches={stitches} />\n    </VStack>\n  );\n}\n","import { Flex, Text } from \"@chakra-ui/react\";\nimport MotifBySize from \"./MotifBySize\";\nimport { MotifBySizeItem } from \"../utils/types\";\n\ninterface Props {\n  intro: string;\n  motifBySize: MotifBySizeItem[];\n}\nexport default function StitchPattern({ intro, motifBySize }: Props) {\n  return (\n    <Flex direction=\"column\" gap={6}>\n      <Text>{intro}</Text>\n      <MotifBySize\n        motifBySize={motifBySize.map((m) => {\n          const { motif, sizes } = m;\n          return { size: sizes.join(\", \"), motif };\n        })}\n      />\n    </Flex>\n  );\n}\n","import {\n  Abbr,\n  Techniques,\n  MotifInPattern,\n  definition,\n  techniques,\n  getVerticalStackedChart,\n} from \"@tanyoknits/shared\";\nimport { getPyramidMotif } from \"@tanyoknits/shared\";\nimport { MotifBySizeItem, PageInfo } from \"../../utils/types\";\nimport { sizes } from \"./sizes\";\nimport StitchPattern from \"../../components/StitchPattern\";\n\n// Stitches in charts\nconst { c2l, m1l, lli, llip } = definition;\n\n// Charts\nconst stacked = [\n  getPyramidMotif(5, true),\n  getPyramidMotif(4, true),\n  getPyramidMotif(3, true),\n  getPyramidMotif(2, true),\n];\n\nconst motif1: MotifInPattern = {\n  stsCount: stacked[1].stsCount,\n  chart: getVerticalStackedChart(stacked.slice(1, 4)),\n  glyphSize: \"M\",\n};\nconst motif2: MotifInPattern = {\n  stsCount: stacked[0].stsCount,\n  chart: getVerticalStackedChart(stacked.slice(0, 3)),\n  glyphSize: \"M\",\n};\n\nconst sizeCutID = 6;\nexport const motifABySize: MotifBySizeItem[] = [\n  // Add untitled title since they are an original motif\n  {\n    sizes: sizes.slice(0, sizeCutID),\n    motif: { ...stacked[3], title: undefined },\n  },\n  { sizes: sizes.slice(sizeCutID), motif: { ...stacked[2], title: undefined } },\n];\n\nexport const motifBBySize: MotifBySizeItem[] = [\n  { sizes: sizes.slice(0, sizeCutID), motif: motif1 },\n  { sizes: sizes.slice(sizeCutID), motif: motif2 },\n];\n\nconst usedTechniques: {\n  title: string;\n  desc: string;\n  video: string | undefined;\n}[] = [\n  {\n    title: \"Tubular CO\",\n    desc: \"Used for stretch neckline cast on\",\n    video: techniques[\"Tubular CO\"]?.videos[0].url,\n  },\n  {\n    title: \"m1l & m1r\",\n    desc: \"Make 1 left/right, used for neckline increase\",\n    video: m1l.videos?.[0].url,\n  },\n  {\n    title: \"w&t\",\n    desc: \"Wrap & turn; short row technique, my preference is German short row. \",\n    video: techniques[\"Wrap & Turn\"]?.videos?.[0].url,\n  },\n  {\n    title: \"LLI & RLI\",\n    desc: \"Lifted increase to the left/right, used for raglan increase\",\n    video: lli.videos?.[0].url,\n  },\n  {\n    title: \"RLI-P & LLI-P\",\n    desc: \"Lifted increase to the right/left side on the wrong side, used for raglan increase on the wrong side (odd number of short rows)\",\n    video: llip.videos?.[0].url,\n  },\n  {\n    title: \"LT & RT\",\n    desc: \"Left/right twist, basically 2-sts cable done without cable needle\",\n    video: c2l.videos?.[0].url,\n  },\n  {\n    title: \"Cable CO\",\n    desc: \"Recommended for CO while body and sleeve are split\",\n    video: techniques[\"Underarm CO\"]?.videos[0].url,\n  },\n  {\n    title: \"Underarm pick up\",\n    desc: \"Gapless underarm pick up, one of the useful tips is:\",\n    video: techniques[\"Underarm pick up\"]?.videos[0].url,\n  },\n  {\n    title: \"Sewn on BO\",\n    desc: \"Or tubular BO\",\n    video: techniques[\"Tubular BO\"]?.videos[0].url,\n  },\n];\n\nconst stitchPage: PageInfo[] = [\n  {\n    id: \"chart-A\",\n    label: \"Chart A\",\n    component: (\n      <StitchPattern\n        intro=\"Following stitch pattern is incorporated at the center of sleeve end,\n      right before cuff.\"\n        motifBySize={motifABySize}\n      />\n    ),\n  },\n  {\n    id: \"chart-B\",\n    label: \"Chart B\",\n    component: (\n      <StitchPattern\n        intro=\"Following stitch pattern is incorporated at the center of front, after\n          short row is complete. Chart B is a stacked variation of Chart A in\n          three different sizes.\"\n        motifBySize={motifBBySize}\n      />\n    ),\n  },\n  {\n    id: \"techniques\",\n    label: \"Techniques\",\n    component: <Techniques list={usedTechniques} />,\n  },\n  {\n    id: \"abbr\",\n    label: \"Abbreviations\",\n    component: (\n      <Abbr\n        list={[\n          \"bef\",\n          \"BO\",\n          \"beg\",\n          \"BOR\",\n          \"CO\",\n          \"dec\",\n          \"foll\",\n          \"inc\",\n          \"pm*\",\n          \"sm*\",\n          \"rm*\",\n          \"rep\",\n          \"rnd\",\n          \"SR\",\n          \"tog\",\n          \"WS\",\n          \"RS\",\n          \"cont\",\n          \"incl\",\n          \"appx\",\n        ]}\n      />\n    ),\n  },\n];\n\nexport default stitchPage;\n"],"names":["InteractiveAlert","_ref","_ref$isRow","isRow","_jsxs","Alert","width","children","_jsx","AlertIcon","MotifBySize","_motifBySize$selected","motifBySize","_useState","useState","_useState2","_slicedToArray","selectedSize","setSelectedSize","_ref2","motif","direction","stitches","getUniqueStsFromChart","chart","VStack","spacing","align","Flex","gap","flexDirection","length","_Fragment","Text","variant","Select","onChange","e","target","value","defaultValue","mr","map","i","size","MotifComponent","_objectSpread","StitchList","StitchPattern","intro","m","sizes","join","c2l","definition","m1l","lli","llip","stacked","getPyramidMotif","motif1","stsCount","getVerticalStackedChart","slice","glyphSize","motif2","motifABySize","title","undefined","motifBBySize","usedTechniques","desc","video","_techniques$TubularC","techniques","videos","url","_m1l$videos","_techniques$WrapTu","_techniques$WrapTu$vi","_lli$videos","_llip$videos","_c2l$videos","_techniques$Underarm","_techniques$Underarm2","_techniques$TubularB","stitchPage","id","label","component","Techniques","list","Abbr"],"sourceRoot":""}
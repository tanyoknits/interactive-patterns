{"version":3,"file":"static/js/660.42a068a0.chunk.js","mappings":"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","sources":["components/InteractiveAlert.tsx","components/StitchPattern.tsx","projects/salvia-cardigan/profile.ts","projects/salvia-cardigan/sizes.ts","projects/salvia-cardigan/stitches.tsx","webpack://@tanyoknits/interactive-patterns/./src/components/StitchPattern.tsx?97ff"],"sourcesContent":["import { Alert, AlertIcon } from \"@chakra-ui/react\";\n\ninterface Props {\n  isRow?: boolean;\n}\n\nexport default function InteractiveAlert({ isRow = false }: Props) {\n  return (\n    <Alert width=\"fit-content\">\n      <AlertIcon />\n      Chart is interactive - click a {isRow ? \"row\" : \"stitch group\"} to see the\n      corresponding written instruction.\n    </Alert>\n  );\n}\n","import { Flex, Text, VStack } from \"@chakra-ui/react\";\nimport { MotifBySizeItem } from \"../utils/types\";\nimport { useState } from \"react\";\nimport {\n  MotifComponent,\n  StitchList,\n  getUniqueStsFromChart,\n} from \"@tanyoknits/shared\";\nimport SelectSize from \"./SelectSize\";\nimport InteractiveAlert from \"./InteractiveAlert\";\nimport { css } from \"@linaria/core\";\n\nconst styles = {\n  link: css`\n    font-weight: bold;\n    text-decoration: underline;\n    cursor: pointer;\n  `,\n};\n\ninterface Props {\n  intro?: string;\n  motifBySize: MotifBySizeItem[];\n  showReflected?: boolean;\n}\nexport default function StitchPattern({\n  intro,\n  motifBySize,\n  showReflected = false,\n}: Props) {\n  const [selectedSize, setSelectedSize] = useState<number>(0);\n  const { motif, direction } = motifBySize[selectedSize] ?? motifBySize[0];\n  const stitches = getUniqueStsFromChart(motif.chart);\n\n  return (\n    <Flex direction=\"column\" gap={6}>\n      {intro != null && <Text>{intro}</Text>}\n      <VStack spacing={6} align=\"left\">\n        <Flex gap={6} alignItems=\"center\" flexWrap=\"wrap\">\n          {motifBySize.length > 1 && (\n            <SelectSize\n              sizes={motifBySize.map((m) => m.sizes.join(\", \"))}\n              selectedSize={selectedSize}\n              onChange={(id: number) => setSelectedSize(id)}\n            />\n          )}\n          <InteractiveAlert />\n        </Flex>\n        <MotifComponent\n          {...motif}\n          direction={direction}\n          showReflected={showReflected}\n        />\n        <StitchList stitches={stitches} hasWS={true} />\n      </VStack>\n    </Flex>\n  );\n}\n","import { needles } from \"../../utils/needles\";\nimport { ProjectProfile } from \"../../utils/types\";\n\nconst profile: ProjectProfile = {\n  yarn: {\n    maker: \"Lana Grossa\",\n    line: \"Puno Luce\",\n    color: \"White\",\n    url: \"https://www.lana-grossa.de/en/yarns/detail/puno-luce/1123/\",\n    shape: \"ball\",\n    yards: 273,\n    grams: 50,\n  },\n  needles: [\n    {\n      type: \"circular\",\n      size: needles[6],\n      usage: \"Body\",\n    },\n    { type: \"circular\", size: needles[5], usage: \"Bands\" },\n  ],\n  gauge: {\n    sts: \"Stockinette stitch\",\n    sts_count: 24,\n    row_count: 34,\n    needle: needles[6],\n  },\n  notions: [\"Cable Needle\", \"Tapestry needle\", \"Stitch markers\"],\n  difficulty: \"Intermediate\",\n  photoCount: 0,\n};\n\nexport default profile;\n","import { IntroSizing } from \"../../utils/types\";\nimport {\n  Size,\n  baseBodySizing,\n  VestMeasurement,\n  FOMeasurement,\n  raglanCoreParts,\n  RaglanMeasurement,\n} from \"../../utils/sizeBase\";\nimport profile from \"./profile\";\nimport { getFOMeasurementBySize, getIntroSizingInfo } from \"../../utils/misc\";\nimport { RaglanPattern, getRaglanPattern } from \"../../patternMakers/raglan\";\n\n// Size list\nexport const sizes: Size[] = [\"M\"];\n\nexport const measurements: FOMeasurement[] = getFOMeasurementBySize(\n  sizes,\n  raglanCoreParts\n);\n\nexport const schemaBySize: RaglanPattern[] = measurements.map((m, i) => {\n  return getRaglanPattern(\n    profile.gauge.sts_count,\n    profile.gauge.row_count,\n    m as RaglanMeasurement,\n    [2, 1],\n    2,\n    1,\n    1.1\n  );\n});\n\nexport const introInfo: IntroSizing = getIntroSizingInfo(\n  sizes,\n  baseBodySizing,\n  measurements,\n  schemaBySize.map((schema) => schema.totalSts),\n  [\"bust\"],\n  [\n    \"bust_circumference\",\n    \"neck_circumference\",\n    \"under_arm_circumference\",\n    \"sleeve_length_from_underarm\",\n    \"total_length\",\n  ],\n  { size: \"M\", grams: 499 }\n);\n","import {\n  Abbr,\n  Techniques,\n  definition,\n  getMossMotif,\n  techniques,\n} from \"@tanyoknits/shared\";\nimport {\n  getBasicBraidMotif,\n  getZigZagMotif,\n  getCenterDiamondMotif,\n} from \"@tanyoknits/shared\";\nimport { MotifBySizeItem, PageInfo } from \"../../utils/types\";\nimport { sizes } from \"./sizes\";\nimport StitchPattern from \"../../components/StitchPattern\";\n\n// Stitches in charts\nconst { m1l } = definition;\n\n// Charts\nexport const braid: MotifBySizeItem[] = [\n  {\n    sizes: [\"2XS\", \"XS\", \"S\", \"M\", \"L\", \"XL\"],\n    motif: getBasicBraidMotif(9, 8),\n  },\n  {\n    sizes: [\"2XL\", \"3XL\", \"4XL\"],\n    motif: getBasicBraidMotif(12, 12),\n  },\n];\n\nexport const zigzag: MotifBySizeItem[] = [\n  {\n    sizes: [\"2XS\"],\n    motif: getZigZagMotif(2, 2, 4),\n  },\n  {\n    sizes: [\"XS\"],\n    motif: getZigZagMotif(3, 2, 4),\n  },\n  {\n    sizes: [\"S\"],\n    motif: getZigZagMotif(3, 1, 6),\n  },\n  {\n    sizes: [\"M\", \"L\", \"XL\"],\n    motif: getZigZagMotif(3, 2, 6),\n  },\n  {\n    sizes: [\"2XL\", \"3XL\", \"4XL\"],\n    motif: getZigZagMotif(3, 3, 6),\n  },\n];\n\nconst centerMotifs: MotifBySizeItem[][] = [true, false].map((hasMB) => [\n  {\n    sizes: [\"2XS\"],\n    motif: getCenterDiamondMotif(hasMB, -1),\n  },\n  {\n    sizes: [\"XS\", \"S\", \"M\"],\n    motif: getCenterDiamondMotif(),\n  },\n  {\n    sizes: [\"L\"],\n    motif: getCenterDiamondMotif(hasMB, 1),\n  },\n  {\n    sizes: [\"XL\"],\n    motif: getCenterDiamondMotif(hasMB, 2),\n  },\n  {\n    sizes: [\"2XL\", \"3XL\", \"4XL\"],\n    motif: getCenterDiamondMotif(hasMB, 3),\n  },\n]);\n\nexport const diamond = centerMotifs[0];\nexport const diamondNoBobble = centerMotifs[1];\n\nexport const moss: MotifBySizeItem[] = [\n  { sizes: sizes, motif: { ...getMossMotif(2), title: undefined } },\n];\n\nconst usedTechniques: {\n  title: string;\n  desc: string;\n  video: string | undefined;\n}[] = [\n  {\n    title: \"Cable CO\",\n    desc: \"Used for CO of each shoulder\",\n    video: \"https://www.youtube.com/watch?v=4YUfdREnSQI\",\n  },\n  {\n    title: \"Knit On CO (koco)\",\n    desc: \"Used to create new sts along neckline or underarm\",\n    video: undefined,\n  },\n  {\n    title: \"m1l & m1r\",\n    desc: \"Make 1 left/right, used for arm inset increase\",\n    video: m1l.videos?.[0].url,\n  },\n  {\n    title: \"w & t\",\n    desc: \"Wrap & turn; short row technique, my preference is German short row. \",\n    video: techniques[\"Wrap & Turn\"]?.videos?.[0].url,\n  },\n  {\n    title: \"Sewn on BO\",\n    desc: \"Or tubular BO\",\n    video: techniques[\"Tubular BO\"]?.videos[0].url,\n  },\n];\n\nconst REFLECT_TEXT =\n  \"Reflected version of this motif is also used to make a symmetrical pattern on front and back\";\n\nconst stitchPage: PageInfo[] = [\n  {\n    id: \"braid-chart\",\n    label: \"Braid\",\n    component: (\n      <StitchPattern\n        intro={REFLECT_TEXT}\n        motifBySize={braid}\n        showReflected={true}\n      />\n    ),\n  },\n  {\n    id: \"zigzag-chart\",\n    label: \"Zigzag\",\n    component: (\n      <StitchPattern\n        intro={REFLECT_TEXT}\n        motifBySize={zigzag}\n        showReflected={true}\n      />\n    ),\n  },\n  {\n    id: \"diamond-chart\",\n    label: \"Diamond\",\n    component: (\n      <StitchPattern\n        intro=\"Same motif but without bobbles are used in the back.\"\n        motifBySize={diamond}\n      />\n    ),\n  },\n  {\n    id: \"moss-chart\",\n    label: \"Moss\",\n    component: (\n      <StitchPattern\n        intro=\"This motif is used on the side as front and back connects to the whole body.\"\n        motifBySize={moss}\n      />\n    ),\n  },\n  {\n    id: \"techniques\",\n    label: \"Techniques\",\n    component: <Techniques list={usedTechniques} />,\n  },\n  {\n    id: \"abbr\",\n    label: \"Abbreviations\",\n    component: (\n      <Abbr\n        list={[\"CO\", \"BO\", \"cont\", \"inc\", \"dec\", \"rep\", \"RS\", \"SR\", \"WS\", \"pu\"]}\n      />\n    ),\n  },\n];\n\nexport default stitchPage;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["InteractiveAlert","_ref","_ref$isRow","isRow","_jsxs","Alert","width","children","_jsx","AlertIcon","StitchPattern","_motifBySize$selected","intro","motifBySize","_ref$showReflected","showReflected","_useState","useState","_useState2","_slicedToArray","selectedSize","setSelectedSize","_ref2","motif","direction","stitches","getUniqueStsFromChart","chart","Flex","gap","Text","VStack","spacing","align","alignItems","flexWrap","length","SelectSize","sizes","map","m","join","onChange","id","MotifComponent","_objectSpread","StitchList","hasWS","profile","yarn","maker","line","color","url","shape","yards","grams","needles","type","size","usage","gauge","sts","sts_count","row_count","needle","notions","difficulty","photoCount","measurements","getFOMeasurementBySize","raglanCoreParts","schemaBySize","i","getRaglanPattern","introInfo","getIntroSizingInfo","baseBodySizing","schema","totalSts","m1l","definition","braid","getBasicBraidMotif","zigzag","getZigZagMotif","centerMotifs","hasMB","getCenterDiamondMotif","diamond","diamondNoBobble","moss","getMossMotif","title","undefined","usedTechniques","desc","video","_m1l$videos","videos","_techniques$WrapTu","techniques","_techniques$WrapTu$vi","_techniques$TubularB","REFLECT_TEXT","stitchPage","label","component","Techniques","list","Abbr"],"sourceRoot":""}
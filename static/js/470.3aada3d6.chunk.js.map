{"version":3,"file":"static/js/470.3aada3d6.chunk.js","mappings":"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","sources":["components/InteractiveAlert.tsx","components/MotifBySize.tsx","components/StitchPattern.tsx","projects/tiara-vest/stitches.tsx"],"sourcesContent":["import { Alert, AlertIcon } from \"@chakra-ui/react\";\n\ninterface Props {\n  isRow?: boolean;\n}\n\nexport default function InteractiveAlert({ isRow = false }: Props) {\n  return (\n    <Alert width=\"fit-content\">\n      <AlertIcon />\n      Chart is interactive - click a {isRow ? \"row\" : \"stitch group\"} to see the\n      corresponding written instruction.\n    </Alert>\n  );\n}\n","import { VStack, Flex } from \"@chakra-ui/react\";\nimport {\n  Direction,\n  MotifComponent,\n  MotifInPattern,\n  StitchList,\n  getUniqueStsFromChart,\n} from \"@tanyoknits/shared\";\nimport { useState } from \"react\";\nimport InteractiveAlert from \"./InteractiveAlert\";\nimport SelectSize from \"./SelectSize\";\n\ninterface Props {\n  motifBySize: { size: string; motif: MotifInPattern; direction?: Direction }[];\n}\n\nexport default function MotifBySize({ motifBySize }: Props) {\n  const [selectedSize, setSelectedSize] = useState<number>(0);\n  const { motif, direction } = motifBySize[selectedSize] ?? motifBySize[0];\n  const stitches = getUniqueStsFromChart(motif.chart);\n  return (\n    <VStack spacing={6} align=\"left\">\n      <Flex gap={6} alignItems=\"center\" flexWrap=\"wrap\">\n        {motifBySize.length > 1 && (\n          <SelectSize\n            sizes={motifBySize.map((m) => m.size)}\n            selectedSize={selectedSize}\n            onChange={(id: number) => setSelectedSize(id)}\n          />\n        )}\n        <InteractiveAlert />\n      </Flex>\n      <MotifComponent {...motif} direction={direction} />\n      <StitchList stitches={stitches} hasWS={true} />\n    </VStack>\n  );\n}\n","import { Flex, Text } from \"@chakra-ui/react\";\nimport MotifBySize from \"./MotifBySize\";\nimport { MotifBySizeItem } from \"../utils/types\";\n\ninterface Props {\n  intro: string;\n  motifBySize: MotifBySizeItem[];\n}\nexport default function StitchPattern({ intro, motifBySize }: Props) {\n  return (\n    <Flex direction=\"column\" gap={6}>\n      <Text>{intro}</Text>\n      <MotifBySize\n        motifBySize={motifBySize.map((m) => {\n          const { motif, sizes } = m;\n          return { size: sizes.join(\", \"), motif };\n        })}\n      />\n    </Flex>\n  );\n}\n","import {\n  Abbr,\n  Techniques,\n  definition,\n  getMossMotif,\n  techniques,\n} from \"@tanyoknits/shared\";\nimport {\n  getBasicBraidMotif,\n  getZigZagMotif,\n  getCenterDiamondMotif,\n} from \"@tanyoknits/shared\";\nimport { MotifBySizeItem, PageInfo } from \"../../utils/types\";\nimport { sizes } from \"./sizes\";\nimport StitchPattern from \"../../components/StitchPattern\";\n\n// Stitches in charts\nconst { m1l } = definition;\n\n// Charts\nexport const braid: MotifBySizeItem[] = [\n  {\n    sizes: [\"2XS\", \"XS\", \"S\", \"M\", \"L\", \"XL\"],\n    motif: getBasicBraidMotif(9, 8),\n  },\n  {\n    sizes: [\"2XL\", \"3XL\", \"4XL\"],\n    motif: getBasicBraidMotif(12, 12),\n  },\n];\n\nexport const zigzag: MotifBySizeItem[] = [\n  {\n    sizes: [\"2XS\"],\n    motif: getZigZagMotif(2, 2, 4),\n  },\n  {\n    sizes: [\"XS\"],\n    motif: getZigZagMotif(3, 2, 4),\n  },\n  {\n    sizes: [\"S\"],\n    motif: getZigZagMotif(3, 1, 6),\n  },\n  {\n    sizes: [\"M\", \"L\", \"XL\"],\n    motif: getZigZagMotif(3, 2, 6),\n  },\n  {\n    sizes: [\"2XL\", \"3XL\", \"4XL\"],\n    motif: getZigZagMotif(3, 3, 6),\n  },\n];\n\nconst centerMotifs: MotifBySizeItem[][] = [true, false].map((hasMB) => [\n  {\n    sizes: [\"2XS\"],\n    motif: getCenterDiamondMotif(hasMB, -1),\n  },\n  {\n    sizes: [\"XS\", \"S\", \"M\"],\n    motif: getCenterDiamondMotif(),\n  },\n  {\n    sizes: [\"L\"],\n    motif: getCenterDiamondMotif(hasMB, 1),\n  },\n  {\n    sizes: [\"XL\"],\n    motif: getCenterDiamondMotif(hasMB, 2),\n  },\n  {\n    sizes: [\"2XL\", \"3XL\", \"4XL\"],\n    motif: getCenterDiamondMotif(hasMB, 3),\n  },\n]);\n\nexport const diamond = centerMotifs[0];\nexport const diamondNoBobble = centerMotifs[1];\n\nexport const moss: MotifBySizeItem[] = [\n  { sizes: sizes, motif: { ...getMossMotif(2), title: undefined } },\n];\n\nconst usedTechniques: {\n  title: string;\n  desc: string;\n  video: string | undefined;\n}[] = [\n  {\n    title: \"Cable CO\",\n    desc: \"Used for CO of each shoulder\",\n    video: \"https://www.youtube.com/watch?v=4YUfdREnSQI\",\n  },\n  {\n    title: \"Knit On CO (koco)\",\n    desc: \"Used to create new sts along neckline or underarm\",\n    video: undefined,\n  },\n  {\n    title: \"m1l & m1r\",\n    desc: \"Make 1 left/right, used for arm inset increase\",\n    video: m1l.videos?.[0].url,\n  },\n  {\n    title: \"w & t\",\n    desc: \"Wrap & turn; short row technique, my preference is German short row. \",\n    video: techniques[\"Wrap & Turn\"]?.videos?.[0].url,\n  },\n  {\n    title: \"Sewn on BO\",\n    desc: \"Or tubular BO\",\n    video: techniques[\"Tubular BO\"]?.videos[0].url,\n  },\n];\n\nconst REFLECT_TEXT =\n  \"Reflected version of this motif is also used to make a symmetrical pattern on front and back\";\n\nconst stitchPage: PageInfo[] = [\n  {\n    id: \"braid-chart\",\n    label: \"Braid\",\n    component: <StitchPattern intro={REFLECT_TEXT} motifBySize={braid} />,\n  },\n  {\n    id: \"zigzag-chart\",\n    label: \"Zigzag\",\n    component: <StitchPattern intro={REFLECT_TEXT} motifBySize={zigzag} />,\n  },\n  {\n    id: \"diamond-chart\",\n    label: \"Diamond\",\n    component: (\n      <StitchPattern\n        intro=\"Same motif but without bobbles are used in the back.\"\n        motifBySize={diamond}\n      />\n    ),\n  },\n  {\n    id: \"moss-chart\",\n    label: \"Moss\",\n    component: (\n      <StitchPattern\n        intro=\"This motif is used on the side as front and back connects to the whole body.\"\n        motifBySize={moss}\n      />\n    ),\n  },\n  {\n    id: \"techniques\",\n    label: \"Techniques\",\n    component: <Techniques list={usedTechniques} />,\n  },\n  {\n    id: \"abbr\",\n    label: \"Abbreviations\",\n    component: (\n      <Abbr\n        list={[\"CO\", \"BO\", \"cont\", \"inc\", \"dec\", \"rep\", \"RS\", \"SR\", \"WS\", \"pu\"]}\n      />\n    ),\n  },\n];\n\nexport default stitchPage;\n"],"names":["InteractiveAlert","_ref","_ref$isRow","isRow","_jsxs","Alert","width","children","_jsx","AlertIcon","MotifBySize","_motifBySize$selected","motifBySize","_useState","useState","_useState2","_slicedToArray","selectedSize","setSelectedSize","_ref2","motif","direction","stitches","getUniqueStsFromChart","chart","VStack","spacing","align","Flex","gap","alignItems","flexWrap","length","SelectSize","sizes","map","m","size","onChange","id","MotifComponent","_objectSpread","StitchList","hasWS","StitchPattern","intro","Text","join","m1l","definition","braid","getBasicBraidMotif","zigzag","getZigZagMotif","centerMotifs","hasMB","getCenterDiamondMotif","diamond","diamondNoBobble","moss","getMossMotif","title","undefined","usedTechniques","desc","video","_m1l$videos","videos","url","_techniques$WrapTu","techniques","_techniques$WrapTu$vi","_techniques$TubularB","REFLECT_TEXT","stitchPage","label","component","Techniques","list","Abbr"],"sourceRoot":""}
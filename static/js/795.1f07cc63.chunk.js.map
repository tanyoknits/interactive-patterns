{"version":3,"file":"static/js/795.1f07cc63.chunk.js","mappings":"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","sources":["components/IntroCard.tsx","components/IntroSizingTable.tsx","components/Photos.tsx","components/Intro.tsx","projects/tiara-vest/IntroPage.tsx","webpack://@tanyoknits/interactive-patterns/./src/components/IntroSizingTable.tsx?8db5"],"sourcesContent":["import { Card, CardBody, Divider, Heading } from \"@chakra-ui/react\";\n\ninterface Props {\n  title: string;\n  children: React.ReactNode;\n}\nexport default function IntroCard({ title, children }: Props) {\n  return (\n    <Card\n      variant=\"elevated\"\n      style={{\n        backgroundColor: \"var(--bg)\",\n        width: \"fit-content\",\n        height: \"fit-content\",\n        maxWidth: \"100%\",\n      }}\n    >\n      <CardBody>\n        <Heading\n          as=\"h2\"\n          size=\"md\"\n          mb={4}\n          style={{ whiteSpace: \"nowrap\" }}\n          pr={1}\n        >\n          {title}\n        </Heading>\n        <Divider variant=\"dashed\" mb={4} />\n        {children}\n      </CardBody>\n    </Card>\n  );\n}\n","import { Table, Td, Tr, Th, Tbody, Box } from \"@chakra-ui/react\";\nimport {\n  getCapitalized,\n  getInchAndCm,\n  getInchAndCmRange,\n  getInchRange,\n  getYdAndM,\n} from \"@tanyoknits/shared\";\nimport { IntroSizing, YarnInfo } from \"../utils/types\";\nimport { css, cx } from \"@linaria/core\";\n\nexport const styles = {\n  table: css`\n    th {\n      border-color: transparent;\n      padding-left: 0;\n      padding-bottom: 4px;\n    }\n    td {\n      padding-left: 0;\n      padding-top: 8px;\n      padding-bottom: 8px;\n      border-color: var(--oc-gray-4);\n      white-space: nowrap;\n    }\n  `,\n  newLine: css`\n    white-space: pre-line !important;\n  `,\n};\n\ninterface Props {\n  introSizing: IntroSizing;\n  yarn: YarnInfo;\n}\n\nexport default function IntroSizingTable({ introSizing, yarn }: Props) {\n  const { totalSts, bodyParts, foParts, materialBase, sizes } = introSizing;\n  console.log(materialBase);\n  const yarnBySize = sizes.map((_, i) => {\n    const grams =\n      (materialBase.grams * totalSts[i]) /\n      totalSts[sizes.indexOf(materialBase.size) ?? 0];\n    const yards = (yarn.yards * grams) / yarn.grams;\n    return { grams, yards, count: Math.ceil(grams / yarn.grams) };\n  });\n\n  return (\n    <Box overflowX=\"auto\">\n      <Table className={cx(styles.table)}>\n        <Tbody>\n          <Tr>\n            <Td />\n            {sizes.map((s, i) => (\n              <Td key={i} fontWeight={600} isNumeric>\n                {s}\n              </Td>\n            ))}\n          </Tr>\n          <Tr>\n            <Th>Body size</Th>\n          </Tr>\n          {bodyParts.map((p, i) => {\n            const sizeRanges = getInchRange(p.sizes);\n            return (\n              <Tr key={i}>\n                <Td>{getCapitalized(p.part)}</Td>\n                {sizeRanges.map((range, j) => {\n                  const rangeText = getInchAndCmRange(range);\n                  return (\n                    <Td key={j} isNumeric>\n                      {rangeText[0]}\n                      <br />\n                      {rangeText[1]}\n                    </Td>\n                  );\n                })}\n              </Tr>\n            );\n          })}\n          <Tr>\n            <Th>Finished measurement</Th>\n          </Tr>\n          {foParts.map((p, i) => (\n            <Tr key={i}>\n              <Td>{getCapitalized(p.part)}</Td>\n              {p.sizes.map((size, j) => (\n                <Td key={j} isNumeric className={cx(styles.newLine)}>\n                  {getInchAndCm(size, \"\\n\")}\n                </Td>\n              ))}\n            </Tr>\n          ))}\n          <Tr>\n            <Th>Yarn needed</Th>\n          </Tr>\n          <Tr>\n            <Td>{yarn.shape}(s)</Td>\n            {yarnBySize.map((size, i) => (\n              <Td key={i} isNumeric className={cx(styles.newLine)}>\n                {size.count}\n              </Td>\n            ))}\n          </Tr>\n          <Tr>\n            <Td>Yard</Td>\n            {yarnBySize.map((size, i) => (\n              <Td key={i} isNumeric className={cx(styles.newLine)}>\n                {getYdAndM(size.yards, \"\\n\")}\n              </Td>\n            ))}\n          </Tr>\n          <Tr>\n            <Td>Weight</Td>\n            {yarnBySize.map((size, i) => (\n              <Td key={i} isNumeric className={cx(styles.newLine)}>\n                {Math.round(size.grams)}g\n              </Td>\n            ))}\n          </Tr>\n        </Tbody>\n      </Table>\n    </Box>\n  );\n}\n","import { Box, Card } from \"@chakra-ui/react\";\n\ninterface Props {\n  id: string;\n  count: number;\n}\n\nfunction Photo({ id, number }: { id: string; number: string }) {\n  return (\n    <Card\n      variant=\"elevated\"\n      height=\"xs\"\n      width=\"xs\"\n      style={{\n        background: `url(${process.env.PUBLIC_URL}/photos/${id}-0${number}.jpg)`,\n        backgroundSize: \"cover\",\n      }}\n    />\n  );\n}\n\nexport default function Photos({ id, count }: Props) {\n  return (\n    <Box width=\"xs\">\n      <Photo id={id} number=\"1\" />\n    </Box>\n  );\n}\n","import { VStack, Text, Wrap, UnorderedList, ListItem } from \"@chakra-ui/react\";\nimport { getYdAndM } from \"@tanyoknits/shared\";\nimport { getNeedleText } from \"../utils/needles\";\nimport IntroCard from \"./IntroCard\";\nimport IntroSizingTable from \"./IntroSizingTable\";\nimport Photos from \"./Photos\";\nimport { IntroSizing, ProjectProfile } from \"../utils/types\";\nimport { ProjectID } from \"../projects/list\";\n\ninterface Props extends ProjectProfile {\n  projectID: ProjectID;\n  introSizing: IntroSizing;\n}\n\nexport default function IntroComponent({\n  projectID,\n  yarn,\n  needles,\n  gauge,\n  notions,\n  difficulty,\n  photoCount,\n  introSizing,\n}: Props) {\n  return (\n    <VStack px={4} spacing={4} align=\"left\">\n      <Wrap spacing={4}>\n        {photoCount > 0 && <Photos id={projectID} count={photoCount} />}\n        <Wrap width={{ md: \"100%\", lg: \"5xl\" }} spacing={4}>\n          <IntroCard title=\"🧶 Yarn\">\n            <>\n              <a href={yarn.url} target=\"_parent\">\n                <Text variant=\"link\">{yarn.line}</Text>\n              </a>\n              by {yarn.maker}\n              <Text>Sample color: {yarn.color}</Text>\n              <Text>\n                1 {yarn.shape} = {getYdAndM(yarn.yards)} / {yarn.grams}g\n              </Text>\n            </>\n          </IntroCard>\n          <IntroCard title=\"🪡 Needles\">\n            <UnorderedList>\n              {needles.map((needle, i) => (\n                <ListItem key={i}>\n                  {getNeedleText(needle.size)} {needle.type} - {needle.usage}\n                </ListItem>\n              ))}\n            </UnorderedList>\n          </IntroCard>\n          <IntroCard title=\"📐 Gauge\">\n            <Text>\n              {gauge.sts_count} sts and {gauge.row_count} rows = 4\" / 10cm\n            </Text>\n            <Text>\n              in {gauge.sts} with {getNeedleText(gauge.needle)}\n            </Text>\n          </IntroCard>\n          <IntroCard title=\"🧷 Notions\">\n            <UnorderedList>\n              {notions.map((notion, i) => (\n                <ListItem key={i}>{notion}</ListItem>\n              ))}\n            </UnorderedList>\n          </IntroCard>\n          <IntroCard title=\"🌟 Difficulty\">\n            <Text>{difficulty}</Text>\n          </IntroCard>\n        </Wrap>\n      </Wrap>\n      <IntroCard title=\"🔢 Sizing & Measurement\">\n        <IntroSizingTable introSizing={introSizing} yarn={yarn} />\n      </IntroCard>\n    </VStack>\n  );\n}\n","import profile from \"./profile\";\nimport IntroComponent from \"../../components/Intro\";\nimport { introSizing } from \"./sizes\";\n\ninterface Props {\n  projectID: string;\n}\nexport default function Intro({ projectID }: Props) {\n  return (\n    <IntroComponent\n      projectID={projectID}\n      {...profile}\n      introSizing={introSizing}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["IntroCard","_ref","title","children","_jsx","Card","variant","style","backgroundColor","width","height","maxWidth","_jsxs","CardBody","Heading","as","size","mb","whiteSpace","pr","Divider","styles","table","newLine","IntroSizingTable","introSizing","yarn","totalSts","bodyParts","foParts","materialBase","sizes","console","log","yarnBySize","map","_","i","_sizes$indexOf","grams","indexOf","yards","count","Math","ceil","Box","overflowX","Table","className","cx","Tbody","Tr","Td","s","fontWeight","isNumeric","Th","p","sizeRanges","getInchRange","getCapitalized","part","range","j","rangeText","getInchAndCmRange","getInchAndCm","shape","getYdAndM","round","Photo","id","number","background","concat","process","backgroundSize","Photos","_ref2","IntroComponent","projectID","needles","gauge","notions","difficulty","photoCount","VStack","px","spacing","align","Wrap","md","lg","_Fragment","href","url","target","Text","line","maker","color","UnorderedList","needle","ListItem","getNeedleText","type","usage","sts_count","row_count","sts","notion","Intro","_objectSpread","profile"],"sourceRoot":""}
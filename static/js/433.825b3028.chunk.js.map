{"version":3,"file":"static/js/433.825b3028.chunk.js","mappings":"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","sources":["projects/juniper-vest/profile.ts","projects/juniper-vest/sizes.ts"],"sourcesContent":["import { needles } from \"../../utils/needles\";\nimport { ProjectProfile } from \"../../utils/types\";\n\nconst profile: ProjectProfile = {\n  yarn: {\n    maker: \"Knit Picks\",\n    line: \"Wool of Andes Superwash\",\n    color: \"Haze Heather\",\n    url: \"https://www.knitpicks.com/haze-heather/p/26320\",\n    shape: \"skein\",\n    yards: 110,\n    grams: 50,\n  },\n  needles: [\n    { type: \"circular\", size: needles[10], usage: \"main body\" },\n    { type: \"circular\", size: needles[0], usage: \"rib\" },\n  ],\n  gauge: {\n    sts: \"St st\",\n    sts_count: 20,\n    row_count: 25,\n    needle: needles[10],\n  },\n  notions: [\"Stitch markers\", \"Tapestry needle\"],\n  difficulty: \"Intermediate\",\n  photoCount: 1,\n};\n\nexport default profile;\n","import { IntroSizingInfo, PatternPartGroup } from \"../../utils/types\";\nimport {\n  Size,\n  FOSizing,\n  FOPart,\n  baseBodySizing,\n  BodyPart,\n  vestCoreParts,\n  VestCorePart,\n  FOMeasurement,\n  VestMeasurement,\n} from \"../../patternMakers/sizeBase\";\nimport profile from \"./profile\";\nimport { GaugeProps, getPattern, getTotalSts } from \"../../patternMakers/vest\";\nimport { getRound, Chart, getBasePatternFromChart } from \"@tanyoknits/shared\";\nimport { Needle } from \"../../utils/needles\";\n\n// Base pattern calculation\nconst commonSize: FOMeasurement[] = [\n  {\n    neck_back_depth: 1,\n    neck_band_height: 1.5,\n    arm_band_height: 1.5,\n    hem: 2.5,\n    shoulder_drop: 1,\n  },\n  {\n    neck_back_depth: 1,\n    neck_band_height: 2,\n    arm_band_height: 2,\n    hem: 2.5,\n    shoulder_drop: 1.5,\n  },\n];\nexport const baseMeasurement: FOSizing = {\n  \"2XS\": {\n    ...commonSize[0],\n    neck_back_depth: 0.5,\n    shoulder_drop: 0.5,\n    neck_depth: 3.75,\n    armhole_depth: 9,\n    underarm_curve_depth: 2,\n    bust_circumference: 30,\n    neck_width: 7,\n    shoulder_width: 3,\n    total_length: 22,\n    arm_inset_width: 2,\n  },\n  XS: {\n    ...commonSize[0],\n    neck_back_depth: 0.5,\n    shoulder_drop: 0.75,\n    neck_depth: 4,\n    armhole_depth: 10.25,\n    underarm_curve_depth: 2,\n    bust_circumference: 32.5,\n    neck_width: 7.5,\n    shoulder_width: 3,\n    total_length: 23,\n    arm_inset_width: 2,\n  },\n  S: {\n    ...commonSize[0],\n    neck_depth: 4.25,\n    armhole_depth: 10.75,\n    underarm_curve_depth: 2.5,\n    bust_circumference: 35,\n    neck_width: 8,\n    shoulder_width: 3.25,\n    total_length: 24,\n    arm_inset_width: 2.25,\n  },\n  M: {\n    ...commonSize[0],\n    neck_depth: 4.5,\n    armhole_depth: 11.25,\n    underarm_curve_depth: 2.5,\n    bust_circumference: 39,\n    neck_width: 9,\n    shoulder_width: 3.25,\n    total_length: 25,\n    arm_inset_width: 2.5,\n    arm_band_height: 2,\n  },\n  L: {\n    ...commonSize[0],\n    neck_depth: 4.75,\n    armhole_depth: 11.75,\n    underarm_curve_depth: 2.5,\n    bust_circumference: 43,\n    neck_width: 10,\n    shoulder_width: 4.25,\n    total_length: 26,\n    arm_inset_width: 2.75,\n  },\n  XL: {\n    ...commonSize[1],\n    neck_depth: 4.75,\n    armhole_depth: 12,\n    underarm_curve_depth: 2.5,\n    bust_circumference: 47,\n    neck_width: 10.5,\n    shoulder_width: 4.75,\n    total_length: 27,\n    arm_inset_width: 2.75,\n  },\n  \"2XL\": {\n    ...commonSize[1],\n    neck_depth: 4.75,\n    armhole_depth: 12.5,\n    underarm_curve_depth: 2.5,\n    bust_circumference: 52,\n    neck_width: 11,\n    shoulder_width: 5.25,\n    total_length: 27,\n    arm_inset_width: 2.75,\n  },\n  \"3XL\": {\n    ...commonSize[1],\n    neck_depth: 4.75,\n    armhole_depth: 12.5,\n    underarm_curve_depth: 2.5,\n    bust_circumference: 56,\n    neck_width: 11,\n    shoulder_width: 5.75,\n    total_length: 27,\n    arm_inset_width: 2.75,\n  },\n  \"4XL\": {\n    ...commonSize[1],\n    neck_depth: 4.75,\n    armhole_depth: 12.5,\n    underarm_curve_depth: 2.5,\n    bust_circumference: 60,\n    neck_width: 11,\n    shoulder_width: 6.5,\n    total_length: 27,\n    arm_inset_width: 2.75,\n  },\n};\n\n// Sizes\nexport const sizes: Size[] = Object.keys(baseMeasurement) as Size[];\n\nexport const measurements: Partial<Record<FOPart, number>>[] = sizes.map(\n  (size) => {\n    const ms = baseMeasurement[size] ?? {};\n    return Object.keys(ms)\n      .filter((key) => vestCoreParts.includes(key as VestCorePart))\n      .reduce((cur, key) => {\n        return Object.assign(cur, { [key]: ms?.[key as VestCorePart] });\n      }, {});\n  }\n);\n\nexport function getGaugeItems(\n  sizeID: number,\n  halfBody: number,\n  stsGauge: number,\n  rowGauge: number\n): GaugeProps {\n  const ms = baseMeasurement[sizes[sizeID]] as VestMeasurement;\n\n  // width\n  const neck = getRound(ms.neck_width * stsGauge);\n  const shoulder = getRound(ms.shoulder_width * stsGauge);\n\n  // Center pattern is an odd number, so neck width should be odd sts too.\n  const adjNeck = getRound(neck, 2) - 1;\n  const adjArmInset = (halfBody - adjNeck - shoulder * 2) / 2;\n  const side = Math.floor((halfBody - adjNeck) / 2);\n\n  // depth\n  const neckBack = getRound(ms.neck_back_depth * rowGauge, 2);\n  const neckFront = getRound(ms.neck_depth * rowGauge, 2);\n  const shoulderDrop = getRound(ms.shoulder_drop * rowGauge, 2);\n  const shoulderToArm = getRound(ms.armhole_depth * rowGauge, 2);\n  const armCurve = getRound(ms.underarm_curve_depth * rowGauge, 2);\n  const shoulderToArmInset = shoulderToArm - armCurve;\n\n  // band\n  const neckBand = getRound(ms.neck_band_height * rowGauge);\n  const armBand = getRound(ms.arm_band_height * rowGauge);\n  const hem = getRound(ms.hem * rowGauge);\n\n  const totalRowCount = getRound(ms.total_length * rowGauge);\n\n  const adjustedSize: GaugeProps = {\n    // Since motifs have their own St equiv stitch count, adjust half body sts\n    halfBody,\n    neck: adjNeck,\n    armInset: adjArmInset,\n    shoulder,\n    side,\n    neckBack,\n    neckFront,\n    shoulderDrop,\n    shoulderToArm,\n    armCurve,\n    shoulderToArmInset,\n    neckBand,\n    armBand,\n    hem,\n    totalRowCount,\n  };\n\n  return adjustedSize;\n}\n\nexport function getPatternByPartGroup(\n  backChart: Chart,\n  frontChart: Chart,\n  stsGauge: number,\n  rowGauge: number,\n  gaugeItems: GaugeProps,\n  coNeedle: Needle,\n  ribNeedle: Needle,\n  motifOffset: number = 0\n): PatternPartGroup[] {\n  // make a base pattern from motif repeats\n\n  const backBasePattern = getBasePatternFromChart(\n    backChart,\n    gaugeItems.totalRowCount,\n    motifOffset\n  );\n  const frontBasePattern = getBasePatternFromChart(\n    frontChart,\n    gaugeItems.totalRowCount,\n    motifOffset\n  );\n\n  const chartByPart = getPattern(\n    backBasePattern,\n    frontBasePattern,\n    stsGauge,\n    rowGauge,\n    gaugeItems,\n    coNeedle,\n    ribNeedle\n  );\n\n  // const frontChartByPart = getFrontPattern(frontBasePattern, gaugeItems, coNeedle);\n  return chartByPart;\n}\n\nconst totalStsBySize: number[] = measurements.map((m, i) => {\n  const schema = getTotalSts(\n    m as VestMeasurement,\n    profile.gauge.sts_count,\n    profile.gauge.row_count\n  );\n\n  return schema;\n});\n\nconst introInfo: IntroSizingInfo = {\n  totalSts: totalStsBySize,\n  bodyParts: [\"bust\"].map((d) => {\n    const part = d as BodyPart;\n    return {\n      part,\n      sizes: sizes.map((size) => baseBodySizing?.[size as Size]?.[part] ?? 0),\n    };\n  }),\n  foParts: [\"bust_circumference\", \"total_length\"].map((d) => {\n    const part = d as FOPart;\n    return {\n      part,\n      sizes: sizes.map((size) => baseMeasurement?.[size as Size]?.[part] ?? 0),\n    };\n  }),\n  baseSizing: { size: \"S\", grams: 260 },\n  sizes,\n};\n\nexport default introInfo;\n"],"names":["profile","yarn","maker","line","color","url","shape","yards","grams","needles","type","size","usage","gauge","sts","sts_count","row_count","needle","notions","difficulty","photoCount","commonSize","neck_back_depth","neck_band_height","arm_band_height","hem","shoulder_drop","baseMeasurement","_objectSpread","neck_depth","armhole_depth","underarm_curve_depth","bust_circumference","neck_width","shoulder_width","total_length","arm_inset_width","XS","S","M","L","XL","sizes","Object","keys","measurements","map","_baseMeasurement$size","ms","filter","key","vestCoreParts","reduce","cur","assign","_defineProperty","getGaugeItems","sizeID","halfBody","stsGauge","rowGauge","neck","getRound","shoulder","adjNeck","adjArmInset","side","Math","floor","neckBack","neckFront","shoulderDrop","shoulderToArm","armCurve","armInset","shoulderToArmInset","neckBand","armBand","totalRowCount","getPatternByPartGroup","backChart","frontChart","gaugeItems","coNeedle","ribNeedle","motifOffset","arguments","length","undefined","backBasePattern","getBasePatternFromChart","frontBasePattern","getPattern","introInfo","totalSts","m","i","getTotalSts","bodyParts","d","part","_baseBodySizing$part","_baseBodySizing","baseBodySizing","foParts","_baseMeasurement$part","_baseMeasurement","baseSizing"],"sourceRoot":""}
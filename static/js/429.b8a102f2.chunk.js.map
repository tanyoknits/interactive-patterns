{"version":3,"file":"static/js/429.b8a102f2.chunk.js","mappings":"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","sources":["components/InteractiveAlert.tsx","components/StitchPattern.tsx","projects/salvia-cardigan/motifs.ts","projects/salvia-cardigan/stitches.tsx"],"sourcesContent":["import { Alert, AlertIcon } from \"@chakra-ui/react\";\n\ninterface Props {\n  isRow?: boolean;\n}\n\nexport default function InteractiveAlert({ isRow = false }: Props) {\n  return (\n    <Alert width=\"fit-content\">\n      <AlertIcon />\n      Chart is interactive - click a {isRow ? \"row\" : \"stitch group\"} to see the\n      corresponding written instruction.\n    </Alert>\n  );\n}\n","import { Flex, Text, VStack } from \"@chakra-ui/react\";\nimport { MotifBySizeItem } from \"../utils/types\";\nimport { useState } from \"react\";\nimport {\n  MotifComponent,\n  StitchList,\n  getUniqueStsFromChart,\n} from \"@tanyoknits/shared\";\nimport SelectSize from \"./SelectSize\";\nimport InteractiveAlert from \"./InteractiveAlert\";\ninterface Props {\n  intro?: string;\n  motifBySize: MotifBySizeItem[];\n  showReflected?: boolean;\n}\nexport default function StitchPattern({\n  intro,\n  motifBySize,\n  showReflected = false,\n}: Props) {\n  const [selectedSize, setSelectedSize] = useState<number>(0);\n  const { motif, direction } = motifBySize[selectedSize] ?? motifBySize[0];\n  const stitches = getUniqueStsFromChart(motif.chart);\n\n  return (\n    <Flex direction=\"column\" gap={6}>\n      {intro != null && <Text>{intro}</Text>}\n      <VStack spacing={6} align=\"left\">\n        <Flex gap={6} alignItems=\"center\" flexWrap=\"wrap\">\n          {motifBySize.length > 1 && (\n            <SelectSize\n              sizes={motifBySize.map((m) => m.sizes.join(\", \"))}\n              selectedSize={selectedSize}\n              onChange={(id: number) => setSelectedSize(id)}\n            />\n          )}\n          <InteractiveAlert />\n        </Flex>\n        <MotifComponent {...motif} direction={direction} />\n        <StitchList stitches={stitches} hasWS={true} />\n      </VStack>\n    </Flex>\n  );\n}\n","/** Motif repeats on Overview page */\n\nimport {\n  Chart,\n  Motif,\n  MotifColor,\n  getChartFromText,\n  getFlattenRow,\n  getMergedChart,\n  getRightLeftFlippedChart,\n  getVerticalStackedChart,\n} from \"@tanyoknits/shared\";\nimport { cable, twistLace } from \"./stitches\";\nimport { sizes } from \"./sizes\";\nimport { getMotifBySize } from \"../../utils/misc\";\n\nconst gutters = sizes.map((_) => getChartFromText([\"p k:2 p\"]));\nconst halfGutters = sizes.map((_) => getChartFromText([\"k p\"]));\n\nconst motifColor: MotifColor[] = [\"orange\", \"teal\"];\n\nexport const repeatedPattern: Chart[] = sizes.map((size, i) => {\n  const cableMotif = { ...getMotifBySize(cable, size), id: motifColor[0] };\n  const cablePadding: Motif = {\n    chart: getChartFromText([\"k:4\"]),\n    stsCount: 4,\n    id: motifColor[0],\n  };\n  const laceMotifBySize = getMotifBySize(twistLace, size);\n  const flattedLaceChart = laceMotifBySize.chart.map((row) =>\n    getFlattenRow(row)\n  );\n  const laceMotif = {\n    ...getMotifBySize(twistLace, size),\n    chart: flattedLaceChart,\n    id: motifColor[1],\n  };\n  const lacePadding: Motif = {\n    chart: getChartFromText([\"p k2tog yo p\", \"k:4\"]).map((row) =>\n      getFlattenRow(row)\n    ),\n    stsCount: 4,\n    id: motifColor[1],\n  };\n\n  const chart1 = getVerticalStackedChart(\n    [\n      cableMotif,\n      cableMotif,\n      cablePadding,\n      cablePadding,\n      laceMotif,\n      laceMotif,\n      lacePadding,\n    ],\n    true\n  );\n\n  const chart2 = getVerticalStackedChart(\n    [\n      laceMotif,\n      laceMotif,\n      lacePadding,\n      cableMotif,\n      cableMotif,\n      cablePadding,\n      cablePadding,\n    ],\n    true\n  );\n\n  return getMergedChart(\n    [\n      halfGutters[i],\n      chart1,\n      gutters[i],\n      chart2,\n      getRightLeftFlippedChart(halfGutters[i]),\n    ],\n    20\n  );\n});\n","import {\n  Abbr,\n  Techniques,\n  definition,\n  getBasicCableMotif,\n  getChartFromText,\n  techniques,\n} from \"@tanyoknits/shared\";\nimport { MotifBySizeItem, PageInfo } from \"../../utils/types\";\nimport { sizes } from \"./sizes\";\nimport StitchPattern from \"../../components/StitchPattern\";\n\n// Stitches in charts\nconst { m1l } = definition;\n\nexport const cable: MotifBySizeItem[] = [\n  {\n    sizes,\n    motif: getBasicCableMotif(4, 4, \"left\", 2),\n  },\n];\n\nexport const twistLace: MotifBySizeItem[] = [\n  {\n    sizes,\n    motif: {\n      chart: getChartFromText([\n        \"p k2tog yo p \",\n        \"p k:2 p\",\n        \"p yo ssk p\",\n        \"p k:2 p\",\n      ]),\n      stsCount: 4,\n    },\n  },\n];\n\n// Combined chart\n\nconst usedTechniques: {\n  title: string;\n  desc: string;\n  video: string | undefined;\n}[] = [\n  {\n    title: \"Cable CO\",\n    desc: \"Used for neckline CO\",\n    video: \"https://www.youtube.com/watch?v=4YUfdREnSQI\",\n  },\n  {\n    title: \"m1l & m1r\",\n    desc: \"Make 1 left/right, used for arm inset increase\",\n    video: m1l.videos?.[0].url,\n  },\n  {\n    title: \"w & t\",\n    desc: \"Wrap & turn; short row technique, my preference is German short row. \",\n    video: techniques[\"Wrap & Turn\"]?.videos?.[0].url,\n  },\n  {\n    title: \"Sewn on BO\",\n    desc: \"Or tubular BO\",\n    video: techniques[\"Tubular BO\"]?.videos[0].url,\n  },\n];\n\nconst stitchPage: PageInfo[] = [\n  {\n    id: \"cable\",\n    label: \"Cable\",\n    component: <StitchPattern motifBySize={cable} />,\n  },\n  {\n    id: \"lace\",\n    label: \"Lace\",\n    component: <StitchPattern motifBySize={twistLace} />,\n  },\n  {\n    id: \"techniques\",\n    label: \"Techniques\",\n    component: <Techniques list={usedTechniques} />,\n  },\n  {\n    id: \"abbr\",\n    label: \"Abbreviations\",\n    component: (\n      <Abbr\n        list={[\"CO\", \"BO\", \"cont\", \"inc\", \"dec\", \"rep\", \"RS\", \"SR\", \"WS\", \"pu\"]}\n      />\n    ),\n  },\n];\n\nexport default stitchPage;\n"],"names":["InteractiveAlert","_ref","_ref$isRow","isRow","_jsxs","Alert","width","children","_jsx","AlertIcon","StitchPattern","_motifBySize$selected","intro","motifBySize","_useState","showReflected","useState","_useState2","_slicedToArray","selectedSize","setSelectedSize","_ref2","motif","direction","stitches","getUniqueStsFromChart","chart","Flex","gap","Text","VStack","spacing","align","alignItems","flexWrap","length","SelectSize","sizes","map","m","join","onChange","id","MotifComponent","_objectSpread","StitchList","hasWS","gutters","_","getChartFromText","halfGutters","motifColor","repeatedPattern","size","i","cableMotif","getMotifBySize","cable","cablePadding","stsCount","flattedLaceChart","twistLace","row","getFlattenRow","laceMotif","lacePadding","chart1","getVerticalStackedChart","chart2","getMergedChart","getRightLeftFlippedChart","m1l","definition","getBasicCableMotif","usedTechniques","title","desc","video","_m1l$videos","videos","url","_techniques$WrapTu","techniques","_techniques$WrapTu$vi","_techniques$TubularB","stitchPage","label","component","Techniques","list","Abbr"],"sourceRoot":""}
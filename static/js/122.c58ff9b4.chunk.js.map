{"version":3,"file":"static/js/122.c58ff9b4.chunk.js","mappings":"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","sources":["components/InteractiveAlert.tsx","components/StitchPattern.tsx","projects/juniper-vest/StitchesPage.tsx","projects/juniper-vest/stitches.tsx","webpack://@tanyoknits/interactive-patterns/./src/components/StitchPattern.tsx?97ff"],"sourcesContent":["import { Alert, AlertIcon } from \"@chakra-ui/react\";\n\ninterface Props {\n  isRow?: boolean;\n}\n\nexport default function InteractiveAlert({ isRow = false }: Props) {\n  return (\n    <Alert width=\"fit-content\">\n      <AlertIcon />\n      Chart is interactive - click a {isRow ? \"row\" : \"stitch group\"} to see the\n      corresponding written instruction.\n    </Alert>\n  );\n}\n","import { Flex, Text, VStack } from \"@chakra-ui/react\";\nimport { MotifBySizeItem } from \"../utils/types\";\nimport { useState } from \"react\";\nimport {\n  MotifComponent,\n  StitchList,\n  getUniqueStsFromChart,\n} from \"@tanyoknits/shared\";\nimport SelectSize from \"./SelectSize\";\nimport InteractiveAlert from \"./InteractiveAlert\";\nimport { css } from \"@linaria/core\";\n\nconst styles = {\n  link: css`\n    font-weight: bold;\n    text-decoration: underline;\n    cursor: pointer;\n  `,\n};\n\ninterface Props {\n  intro?: string;\n  motifBySize: MotifBySizeItem[];\n  showReflected?: boolean;\n}\nexport default function StitchPattern({\n  intro,\n  motifBySize,\n  showReflected = false,\n}: Props) {\n  const [selectedSize, setSelectedSize] = useState<number>(0);\n  const { motif, direction } = motifBySize[selectedSize] ?? motifBySize[0];\n  const stitches = getUniqueStsFromChart(motif.chart);\n\n  return (\n    <Flex direction=\"column\" gap={6}>\n      {intro != null && <Text>{intro}</Text>}\n      <VStack spacing={6} align=\"left\">\n        <Flex gap={6} alignItems=\"center\" flexWrap=\"wrap\">\n          {motifBySize.length > 1 && (\n            <SelectSize\n              sizes={motifBySize.map((m) => m.sizes.join(\", \"))}\n              selectedSize={selectedSize}\n              onChange={(id: number) => setSelectedSize(id)}\n            />\n          )}\n          <InteractiveAlert />\n        </Flex>\n        <MotifComponent\n          {...motif}\n          direction={direction}\n          showReflected={showReflected}\n        />\n        <StitchList stitches={stitches} hasWS={true} />\n      </VStack>\n    </Flex>\n  );\n}\n","import { PatternWithMenusProps } from \"../../layout/PageWithMenus\";\nimport stitchPage from \"./stitches\";\n\nexport default function StitchPage({ menu }: PatternWithMenusProps) {\n  return <>{stitchPage[menu].component}</>;\n}\n","import {\n  Abbr,\n  Techniques,\n  definition,\n  getBasicCableMotif,\n  getLeafMotif,\n  techniques,\n} from \"@tanyoknits/shared\";\nimport { MotifBySizeItem, PageInfo } from \"../../utils/types\";\nimport { sizes } from \"./sizes\";\nimport StitchPattern from \"../../components/StitchPattern\";\n\n// Stitches in charts\nconst { m1l, c2l } = definition;\n\nexport const leaf: MotifBySizeItem[] = [\n  {\n    sizes,\n    motif: getLeafMotif(),\n  },\n];\n\nexport const twistL: MotifBySizeItem[] = [\n  {\n    sizes,\n    motif: getBasicCableMotif(2, 2, \"left\"),\n  },\n];\n\nexport const twistR: MotifBySizeItem[] = [\n  {\n    sizes,\n    motif: getBasicCableMotif(2, 2, \"right\"),\n  },\n];\n\nconst usedTechniques: {\n  title: string;\n  desc: string;\n  video: string | undefined;\n}[] = [\n  {\n    title: \"Cable CO\",\n    desc: \"Used for CO of each shoulder\",\n    video: \"https://www.youtube.com/watch?v=4YUfdREnSQI\",\n  },\n  {\n    title: \"Left or right twist\",\n    desc: \"Cable with only two stitches, this twist can be done without cable needle\",\n    video: c2l.videos?.[0].url,\n  },\n  {\n    title: \"Knit On CO (koco)\",\n    desc: \"Used to create new sts along underarm\",\n    video: undefined,\n  },\n  {\n    title: \"m1l & m1r\",\n    desc: \"Make 1 left/right, used for arm inset increase\",\n    video: m1l.videos?.[0].url,\n  },\n  {\n    title: \"w & t\",\n    desc: \"Wrap & turn; short row technique, my preference is German short row. \",\n    video: techniques[\"Wrap & Turn\"]?.videos?.[0].url,\n  },\n  {\n    title: \"Sewn on BO\",\n    desc: \"Or tubular BO\",\n    video: techniques[\"Tubular BO\"]?.videos[0].url,\n  },\n];\n\nconst stitchPage: PageInfo[] = [\n  {\n    id: \"leaf-chart\",\n    label: \"Leaf\",\n    component: <StitchPattern motifBySize={leaf} />,\n  },\n  {\n    id: \"left-twist-chart\",\n    label: \"Left Twist\",\n    component: <StitchPattern motifBySize={twistL} />,\n  },\n  {\n    id: \"right-twist-chart\",\n    label: \"Right Twist\",\n    component: <StitchPattern motifBySize={twistR} />,\n  },\n  {\n    id: \"techniques\",\n    label: \"Techniques\",\n    component: <Techniques list={usedTechniques} />,\n  },\n  {\n    id: \"abbr\",\n    label: \"Abbreviations\",\n    component: (\n      <Abbr\n        list={[\"CO\", \"BO\", \"cont\", \"inc\", \"dec\", \"rep\", \"RS\", \"SR\", \"WS\", \"pu\"]}\n      />\n    ),\n  },\n];\n\nexport default stitchPage;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["InteractiveAlert","_ref","_ref$isRow","isRow","_jsxs","Alert","width","children","_jsx","AlertIcon","StitchPattern","_motifBySize$selected","intro","motifBySize","_ref$showReflected","showReflected","_useState","useState","_useState2","_slicedToArray","selectedSize","setSelectedSize","_ref2","motif","direction","stitches","getUniqueStsFromChart","chart","Flex","gap","Text","VStack","spacing","align","alignItems","flexWrap","length","SelectSize","sizes","map","m","join","onChange","id","MotifComponent","_objectSpread","StitchList","hasWS","StitchPage","menu","_Fragment","stitchPage","component","m1l","definition","c2l","leaf","getLeafMotif","twistL","getBasicCableMotif","twistR","usedTechniques","title","desc","video","_c2l$videos","videos","url","undefined","_m1l$videos","_techniques$WrapTu","techniques","_techniques$WrapTu$vi","_techniques$TubularB","label","Techniques","list","Abbr"],"sourceRoot":""}